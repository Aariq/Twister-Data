theme(
legend.position = "right",
#legend.position=c(0.13,0.16), #puts it in the lower left
legend.text = element_text(size = 10),
legend.background = element_rect(color = "black")) +
ylab(paste0("PC3 (",round(summary(tea.pca2)$importance[2,3]*100, 2), "%)")) +
xlab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)"))
pca.correlations <- PC.cors(tea.pca2, as.data.frame(scale(twist2[ , -1])), 2)
pca.correlations$PC1.r2 <- pca.correlations$PC1.corr.coefs^2
pca.correlations$PC2.r2 <- pca.correlations$PC2.corr.coefs^2
pca.correlations$PC1.p.corrected <- pca.correlations$PC1.p.values %>% p.adjust(method="fdr")
pca.correlations$PC2.p.corrected <- pca.correlations$PC2.p.values %>% p.adjust(method="fdr")
PC1.corr.sig <- pca.correlations %>% subset(PC1.p.corrected <= 0.05 & PC1.r2 >= 0.7,
select = c(.Variables, PC1.corr.coefs, PC1.r2,
PC1.p.corrected))
PC2.corr.sig <- pca.correlations %>% subset(PC2.p.corrected <= 0.05 & PC2.r2 >= 0.7,
select = c(.Variables, PC2.corr.coefs, PC2.r2,
PC2.p.corrected))
PC1.corr.sig[,-1] <- PC1.corr.sig[,-1] %>% signif(digits=3)
PC1.corr.sig
PC2.corr.sig[,-1] <- PC2.corr.sig[,-1] %>% signif(digits=3)
PC2.corr.sig
write.xlsx(PC1.corr.sig, "Field Trial PCA compounds.xlsx", sheetName = "PC1", col.names = TRUE, row.names = FALSE)
library(xlsx)
pca.correlations <- PC.cors(tea.pca2, as.data.frame(scale(twist2[ , -1])), 2)
pca.correlations$PC1.r2 <- pca.correlations$PC1.corr.coefs^2
pca.correlations$PC2.r2 <- pca.correlations$PC2.corr.coefs^2
pca.correlations$PC1.p.corrected <- pca.correlations$PC1.p.values %>% p.adjust(method="fdr")
pca.correlations$PC2.p.corrected <- pca.correlations$PC2.p.values %>% p.adjust(method="fdr")
PC1.corr.sig <- pca.correlations %>% subset(PC1.p.corrected <= 0.05 & PC1.r2 >= 0.7,
select = c(.Variables, PC1.corr.coefs, PC1.r2,
PC1.p.corrected))
PC2.corr.sig <- pca.correlations %>% subset(PC2.p.corrected <= 0.05 & PC2.r2 >= 0.7,
select = c(.Variables, PC2.corr.coefs, PC2.r2,
PC2.p.corrected))
PC1.corr.sig[,-1] <- PC1.corr.sig[,-1] %>% signif(digits=3)
PC1.corr.sig
PC2.corr.sig[,-1] <- PC2.corr.sig[,-1] %>% signif(digits=3)
PC2.corr.sig
write.xlsx(PC1.corr.sig, "Field Trial PCA compounds.xlsx", sheetName = "PC1", col.names = TRUE, row.names = FALSE)
write.xlsx(PC2.corr.sig, "Field Trial PCA compounds.xlsx", sheetName = "PC2", col.names = TRUE, row.names = FALSE, append = TRUE)
twist2[,1]
twist2[,2]
PC1.corr.sig
pca.correlations <- PC.cors(tea.pca2, as.data.frame(twist2[ , -1]), 2)
pca.correlations$PC1.r2 <- pca.correlations$PC1.corr.coefs^2
pca.correlations$PC2.r2 <- pca.correlations$PC2.corr.coefs^2
pca.correlations$PC1.p.corrected <- pca.correlations$PC1.p.values %>% p.adjust(method="fdr")
pca.correlations$PC2.p.corrected <- pca.correlations$PC2.p.values %>% p.adjust(method="fdr")
PC1.corr.sig <- pca.correlations %>% subset(PC1.p.corrected <= 0.05 & PC1.r2 >= 0.7,
select = c(.Variables, PC1.corr.coefs, PC1.r2,
PC1.p.corrected))
PC2.corr.sig <- pca.correlations %>% subset(PC2.p.corrected <= 0.05 & PC2.r2 >= 0.7,
select = c(.Variables, PC2.corr.coefs, PC2.r2,
PC2.p.corrected))
PC1.corr.sig[,-1] <- PC1.corr.sig[,-1] %>% signif(digits=3)
PC1.corr.sig
head(sort(tea.pca2$rotation[ ,1]))
setwd("/Users/scottericr/Google Drive/R Code/Twister Data")
#setwd("/Users/escott03/Google Drive/R Code/Twister Data")
library(reshape2)
library(dplyr)
library(ggplot2)
library(readr)
library(xlsx)
#library(car)
#library(scales)
#library(MASS)
library(RColorBrewer)
library(venn)
source("/Users/scottericr/Google Drive/R Code/myfunctions.R")
setwd("/Users/scottericr/Google Drive/R Code/Twister Data")
#setwd("/Users/escott03/Google Drive/R Code/Twister Data")
library(reshape2)
library(dplyr)
library(ggplot2)
library(readr)
library(xlsx)
#library(car)
#library(scales)
#library(MASS)
library(RColorBrewer)
library(venn)
source("/Users/scottericr/Google Drive/R Code/myfunctions.R")
twister <- read.xlsx("Field2.xlsx", sheetIndex = 3)
twister
twister1 <- twister
twister1[is.na(twister1)] = 0 #missing cells represent undetected compounds
twister1[is.na(twister1)]
twister1
twister
twister1 <- twister[ , -1]
twister1
twister1 <- twister[ , 1:length(twister)-1]
twister1
twister1[is.na(twister1)] = 0 #missing cells represent undetected compounds
twister1
twister <- read.xlsx("Field2.xlsx", sheetIndex = 3)
twister1 <- twister[1:nrow(twister)-2 , 1:ncol(twister)-1]
twister1
twister1 <- twister[1:nrow(twister)-2, 1:ncol(twister)-1]
nrow(twister)
nrow(twister)-2
1:nrow(twister)-2
1:ncol(twister)-1
twister1 <- twister[1:(nrow(twister)-2), 1:(ncol(twister)-1)]
twister1
ncol(twister)-1)
ncol(twister)-1
twister
twister1 <- twister[1:149, 1:12]
twister1
twister1[is.na(twister1)] = 0 #missing cells represent undetected compounds
twist2 = recast(twister1, variable ~ Compound, measure.var = c(2:12)) #this transposes the data so each column is a compound
twist2
colnames(twist2)[1]
colnames(twist2)[1] <- "samples"
summary(twist2$samples)
Treatment<-c(rep("E. obliqua",3),rep("MeJA",4),rep("control",4))
dim(twist2)-1 #149
x <- transmute(twister1, Control = con1 + con2 + con3 + con4,
MeJA = meja1 + meja2 + meja3 + meja4,
Geometrid = geo1 + geo2 + geo3)
x[x > 0] = 1
x$Compound <- colnames(twist2)[-1]
x <- dplyr::select(x, Compound, everything())
venn(x[ , -1], cexil=1.5, cexsn=1.1)
colSums(x[ , -1])
#unique to Geometrid:
Geometrid.unique <- subset(x, x$Geometrid != 0 & x$MeJA == 0 & x$Control == 0)
Geometrid.unique
#unique to MeJA:
MeJA.unique <- subset(x, x$MeJA != 0 & x$Geometrid == 0 & x$Control == 0)
MeJA.unique
#unique to Control
Control.unique <- subset(x, x$Control != 0 & x$Geometrid == 0 & x$MeJA == 0)
Control.unique
tea.pca2<-prcomp(twist2[ , -1], scale. = TRUE, center = TRUE)
summary(tea.pca2)
#head(tea.pca2$rotation)
screeplot(tea.pca2, type="lines")
##my ggplot2 theme
multivar.theme <- theme_bw(base_size = 10, base_family = "Arial")+  #this changes the default text size and font
theme(axis.title = element_text(size = 10),                      #this sets a different font size for the axis labels
panel.border = element_rect(size = 1, color = "black"),   #change size= here to change border size
panel.grid.major = element_blank(),                     #these two lines make the grid lines go away
panel.grid.minor = element_blank())
####Plotting PCA####
#Treatment
labels = expression("Control", italic("E. obliqua"), "MeJA")
cols <- c("control" = "#1b9e77", "MeJA" = "#d95f02", "E. obliqua" = "#7570b3")
#PC1 vs PC2
ggplot(as.data.frame(tea.pca2$x), aes(PC1, PC2, fill = Treatment)) +
geom_point(shape = 24, size = I(3)) +
scale_fill_manual(values = cols, labels = labels) +
multivar.theme +
theme(
legend.position = "right",
#legend.position=c(0.13,0.16), #puts it in the lower left
legend.text = element_text(size = 10),
legend.background = element_rect(color = "black")) +
ylab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(tea.pca2)$importance[2,1]*100, 2), "%)"))
ggsave("Field Trial.png", height = 3.5, width = 5, units = "in")
#PC2 vs PC3
ggplot(as.data.frame(tea.pca2$x), aes(PC2, PC3, fill = Treatment)) +
geom_point(shape = 24, size = I(3)) +
scale_fill_manual(values = cols, labels = labels) +
multivar.theme +
theme(
legend.position = "right",
#legend.position=c(0.13,0.16), #puts it in the lower left
legend.text = element_text(size = 10),
legend.background = element_rect(color = "black")) +
ylab(paste0("PC3 (",round(summary(tea.pca2)$importance[2,3]*100, 2), "%)")) +
xlab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)"))
ggsave("Field Trial2vs3.png", height = 3.5, width = 5, units = "in")
ggplot(as.data.frame(tea.pca2$x), aes(PC1, PC2, fill = Treatment)) +
geom_point(shape = 24, size = I(3)) +
scale_fill_manual(values = cols, labels = labels) +
multivar.theme +
theme(
legend.position = "right",
#legend.position=c(0.13,0.16), #puts it in the lower left
legend.text = element_text(size = 10),
legend.background = element_rect(color = "black")) +
ylab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(tea.pca2)$importance[2,1]*100, 2), "%)"))
ggplot(as.data.frame(tea.pca2$x), aes(PC2, PC3, fill = Treatment)) +
geom_point(shape = 24, size = I(3)) +
scale_fill_manual(values = cols, labels = labels) +
multivar.theme +
theme(
legend.position = "right",
#legend.position=c(0.13,0.16), #puts it in the lower left
legend.text = element_text(size = 10),
legend.background = element_rect(color = "black")) +
ylab(paste0("PC3 (",round(summary(tea.pca2)$importance[2,3]*100, 2), "%)")) +
xlab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)"))
twist2[,2]
pca.correlations <- PC.cors(tea.pca2, as.data.frame(twist2[ , -1]), 2)
pca.correlations$PC1.r2 <- pca.correlations$PC1.corr.coefs^2
pca.correlations$PC2.r2 <- pca.correlations$PC2.corr.coefs^2
pca.correlations$PC1.p.corrected <- pca.correlations$PC1.p.values %>% p.adjust(method="fdr")
pca.correlations$PC2.p.corrected <- pca.correlations$PC2.p.values %>% p.adjust(method="fdr")
PC1.corr.sig <- pca.correlations %>% subset(PC1.p.corrected <= 0.05 & PC1.r2 >= 0.7,
select = c(.Variables, PC1.corr.coefs, PC1.r2,
PC1.p.corrected))
PC2.corr.sig <- pca.correlations %>% subset(PC2.p.corrected <= 0.05 & PC2.r2 >= 0.7,
select = c(.Variables, PC2.corr.coefs, PC2.r2,
PC2.p.corrected))
PC1.corr.sig[,-1] <- PC1.corr.sig[,-1] %>% signif(digits=3)
PC1.corr.sig
PC2.corr.sig[,-1] <- PC2.corr.sig[,-1] %>% signif(digits=3)
PC2.corr.sig
write.xlsx(PC1.corr.sig, "Field Trial PCA compounds.xlsx", sheetName = "PC1", col.names = TRUE, row.names = FALSE)
write.xlsx(PC2.corr.sig, "Field Trial PCA compounds.xlsx", sheetName = "PC2", col.names = TRUE, row.names = FALSE, append = TRUE)
tea.pca2$rotation[rownames(tea.pca2$rotation) == "Terpinene<gamma->" , 1]
head(sort(tea.pca2$rotation[ ,1]))
#which PC has the greatest loading for gamma terpinene?
tea.pca2$rotation[rownames(tea.pca2$rotation) == "Terpinene<gamma->", ]
#PC3
head(sort(tea.pca2$rotation[ , 3]))
tea.pca2$rotation[rownames(tea.pca2$rotation) == "Terpinene<gamma->" , 1]
select(twist2, samples, `Terpinene<gamma->`)
twist2
tea.pca2$rotation[rownames(tea.pca2$rotation) == "γ-Terpinene" , 1]
head(sort(tea.pca2$rotation[ ,1]))
tea.pca2$rotation[rownames(tea.pca2$rotation) == "γ-Terpinene" , 1]
head(sort(tea.pca2$rotation[ ,1]))
tea.pca2$rotation[rownames(tea.pca2$rotation) == "γ-Terpinene", ]
head(sort(tea.pca2$rotation[ , 3]))
select(twist2, samples, `γ-Terpinene`)
ggplot(as.data.frame(tea.pca2$x), aes(PC1, PC2, fill = Treatment)) +
geom_point(shape = 24, size = I(3)) +
scale_fill_manual(values = cols, labels = labels) +
multivar.theme +
theme(
legend.position = "right",
#legend.position=c(0.13,0.16), #puts it in the lower left
legend.text = element_text(size = 10),
legend.background = element_rect(color = "black")) +
ylab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(tea.pca2)$importance[2,1]*100, 2), "%)"))
ggsave("Field Trial.png", height = 3.5, width = 5, units = "in")
pca.correlations <- PC.cors(tea.pca2, as.data.frame(twist2[ , -1]), 2)
pca.correlations$PC1.r2 <- pca.correlations$PC1.corr.coefs^2
pca.correlations$PC2.r2 <- pca.correlations$PC2.corr.coefs^2
pca.correlations$PC1.p.corrected <- pca.correlations$PC1.p.values %>% p.adjust(method="fdr")
pca.correlations$PC2.p.corrected <- pca.correlations$PC2.p.values %>% p.adjust(method="fdr")
PC1.corr.sig <- pca.correlations %>% subset(PC1.p.corrected <= 0.05 & PC1.r2 >= 0.7,
select = c(.Variables, PC1.corr.coefs, PC1.r2,
PC1.p.corrected))
PC2.corr.sig <- pca.correlations %>% subset(PC2.p.corrected <= 0.05 & PC2.r2 >= 0.7,
select = c(.Variables, PC2.corr.coefs, PC2.r2,
PC2.p.corrected))
PC1.corr.sig[,-1] <- PC1.corr.sig[,-1] %>% signif(digits=3)
PC1.corr.sig
PC2.corr.sig[,-1] <- PC2.corr.sig[,-1] %>% signif(digits=3)
PC2.corr.sig
write.xlsx(PC1.corr.sig, "Field Trial PCA compounds.xlsx", sheetName = "PC1", col.names = TRUE, row.names = FALSE)
write.xlsx(PC2.corr.sig, "Field Trial PCA compounds.xlsx", sheetName = "PC2", col.names = TRUE, row.names = FALSE, append = TRUE)
setwd("/Users/scottericr/Google Drive/R Code/Twister Data")
#setwd("/Users/escott03/Google Drive/R Code/Twister Data")
library(reshape2)
library(dplyr)
library(ggplot2)
library(readr)
library(xlsx)
#library(car)
#library(scales)
#library(MASS)
library(RColorBrewer)
library(venn)
source("/Users/scottericr/Google Drive/R Code/myfunctions.R")
setwd("/Users/scottericr/Google Drive/R Code/Twister Data")
#setwd("/Users/escott03/Google Drive/R Code/Twister Data")
library(reshape2)
library(dplyr)
library(ggplot2)
library(readr)
library(xlsx)
#library(car)
#library(scales)
#library(MASS)
library(RColorBrewer)
library(venn)
source("/Users/scottericr/Google Drive/R Code/myfunctions.R")
#twister <- read_csv("Field.csv")
twister <- read.xlsx("Field2.xlsx", sheetIndex = 3)
twister1 <- twister[1:149, 1:12]
twister1[is.na(twister1)] = 0 #missing cells represent undetected compounds
twist2 = recast(twister1, variable ~ Compound, measure.var = c(2:12)) #this transposes the data so each column is a compound
twist2
colnames(twist2)[1] <- "samples"
#glimpse(twist2)
summary(twist2$samples)
Treatment<-c(rep("E. obliqua",3),rep("MeJA",4),rep("control",4))
dim(twist2)-1 #149
x <- transmute(twister1, Control = con1 + con2 + con3 + con4,
MeJA = meja1 + meja2 + meja3 + meja4,
Geometrid = geo1 + geo2 + geo3)
x[x > 0] = 1
x$Compound <- colnames(twist2)[-1]
x <- dplyr::select(x, Compound, everything())
venn(x[ , -1], cexil=1.5, cexsn=1.1)
colSums(x[ , -1])
#unique to Geometrid:
Geometrid.unique <- subset(x, x$Geometrid != 0 & x$MeJA == 0 & x$Control == 0)
Geometrid.unique
#unique to MeJA:
MeJA.unique <- subset(x, x$MeJA != 0 & x$Geometrid == 0 & x$Control == 0)
MeJA.unique
#unique to Control
Control.unique <- subset(x, x$Control != 0 & x$Geometrid == 0 & x$MeJA == 0)
Control.unique
tea.pca2<-prcomp(twist2[ , -1], scale. = TRUE, center = TRUE)
summary(tea.pca2)
#head(tea.pca2$rotation)
screeplot(tea.pca2, type="lines")
##my ggplot2 theme
multivar.theme <- theme_bw(base_size = 10, base_family = "Arial")+  #this changes the default text size and font
theme(axis.title = element_text(size = 10),                      #this sets a different font size for the axis labels
panel.border = element_rect(size = 1, color = "black"),   #change size= here to change border size
panel.grid.major = element_blank(),                     #these two lines make the grid lines go away
panel.grid.minor = element_blank())
####Plotting PCA####
#Treatment
labels = expression("Control", italic("E. obliqua"), "MeJA")
cols <- c("control" = "#1b9e77", "MeJA" = "#d95f02", "E. obliqua" = "#7570b3")
#PC1 vs PC2
ggplot(as.data.frame(tea.pca2$x), aes(PC1, PC2, fill = Treatment)) +
geom_point(shape = 24, size = I(3)) +
scale_fill_manual(values = cols, labels = labels) +
multivar.theme +
theme(
legend.position = "right",
#legend.position=c(0.13,0.16), #puts it in the lower left
legend.text = element_text(size = 10),
legend.background = element_rect(color = "black")) +
ylab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(tea.pca2)$importance[2,1]*100, 2), "%)"))
ggsave("Field Trial.png", height = 3.5, width = 5, units = "in")
#PC2 vs PC3
ggplot(as.data.frame(tea.pca2$x), aes(PC2, PC3, fill = Treatment)) +
geom_point(shape = 24, size = I(3)) +
scale_fill_manual(values = cols, labels = labels) +
multivar.theme +
theme(
legend.position = "right",
#legend.position=c(0.13,0.16), #puts it in the lower left
legend.text = element_text(size = 10),
legend.background = element_rect(color = "black")) +
ylab(paste0("PC3 (",round(summary(tea.pca2)$importance[2,3]*100, 2), "%)")) +
xlab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)"))
ggsave("Field Trial2vs3.png", height = 3.5, width = 5, units = "in")
pca.correlations <- PC.cors(tea.pca2, as.data.frame(twist2[ , -1]), 2)
pca.correlations$PC1.r2 <- pca.correlations$PC1.corr.coefs^2
pca.correlations$PC2.r2 <- pca.correlations$PC2.corr.coefs^2
pca.correlations$PC1.p.corrected <- pca.correlations$PC1.p.values %>% p.adjust(method="fdr")
pca.correlations$PC2.p.corrected <- pca.correlations$PC2.p.values %>% p.adjust(method="fdr")
PC1.corr.sig <- pca.correlations %>% subset(PC1.p.corrected <= 0.05 & PC1.r2 >= 0.7,
select = c(.Variables, PC1.corr.coefs, PC1.r2,
PC1.p.corrected))
PC2.corr.sig <- pca.correlations %>% subset(PC2.p.corrected <= 0.05 & PC2.r2 >= 0.7,
select = c(.Variables, PC2.corr.coefs, PC2.r2,
PC2.p.corrected))
PC1.corr.sig[,-1] <- PC1.corr.sig[,-1] %>% signif(digits=3)
PC1.corr.sig
PC2.corr.sig[,-1] <- PC2.corr.sig[,-1] %>% signif(digits=3)
PC2.corr.sig
setwd("/Users/scottericr/Google Drive/R Code/Twister Data")
library(reshape2)
library(tidyr)
library(dplyr)
library(venn)
library(ggplot2)
library(readr)
library(xlsx)
source("/Users/scottericr/Google Drive/R Code/myfunctions.R")
input <- read_csv("DHS Comparison updated.csv") #Nicole added back two compounds she previously removed as contaminants.  They're not actually contaminants.
input2 <- input[1:12, ]
#glimpse(input2)
input2[is.na(input2)] <- 0  #NA's represent 0's
vars <- colsplit(input2$Treatment, "\\.", c("Method", "Treatment", "Rep"))
vars
len <- dim(input2)[2]
data <- cbind(vars$Method, vars$Treatment, input2[ , 2:len])
colnames(data)[1:2] <- c("Method","Treatment")
head(data)
#glimpse(data)
counts<-head(summarise_each(data, funs(n_distinct)))
rm <- which(counts <= 1)
rm
data <- subset(data, select = -rm)
#glimpse(data)
t(data[ , 3:length(data)]) %>% as.data.frame() -> x
colnames(x) <- input2$Treatment
x.logical <- transmute(x, DHS.Tenax = Tenax.Cont.1 + Tenax.Cont.2 + Tenax.Cont.3 +
Tenax.MeJA.1 + Tenax.MeJA.2 + Tenax.MeJA.3,
DCSE.Twister = Twister.Cont.1 + Twister.Cont.2 + Twister.Cont.3 +
Twister.MeJA.1 + Twister.MeJA.2 + Twister.MeJA.3)
x.logical[x.logical > 0] = 1
x.logical$Compound <- rownames(x)
x.logical <- dplyr::select(x.logical, Compound, everything())
tail(x.logical)
venn(x.logical[ , -1], cexil = 1, cexsn = .85)
DHS.Tenax.unique <- subset(x.logical, x.logical$DHS.Tenax != 0 & x.logical$DCSE.Twister == 0)
dim(DHS.Tenax.unique)[1]
DCSE.Twister.unique <- subset(x.logical, x.logical$DCSE.Twister !=0 & x.logical$DHS.Tenax == 0)
dim(DCSE.Twister.unique)[1]
rbind(DHS.Tenax.unique, DCSE.Twister.unique) -> method_unique_compounds
write_csv(method_unique_compounds, "method unique compounds.csv")
colSums(x.logical[ , -1])
x.trt.logical <- transmute(x, Control = Tenax.Cont.1 + Tenax.Cont.2 + Tenax.Cont.3 +
Twister.Cont.1 + Twister.Cont.2 + Twister.Cont.3,
MeJA = Tenax.MeJA.1 + Tenax.MeJA.2 + Tenax.MeJA.3 +
Twister.MeJA.1 + Twister.MeJA.2 + Twister.MeJA.3)
#head(x.treatment)
x.trt.logical[x.trt.logical>0] = 1
x.trt.logical$Compound <- rownames(x)
x.trt.logical <- dplyr::select(x.trt.logical, Compound, everything())
Control.unique <- subset(x.trt.logical, x.trt.logical$Control != 0 & x.trt.logical$MeJA == 0)
dim(Control.unique)[1]
MeJA.unique <- subset(x.trt.logical, x.trt.logical$Control == 0 & x.trt.logical$MeJA != 0)
dim(MeJA.unique)[1]
treatment_unique_compounds <- rbind(Control.unique, MeJA.unique)
colSums(x.trt.logical[ , -1])
data.scaled <- scale(data[3:length(data)])
all.pca <- prcomp(data.scaled, scale. = FALSE, center = FALSE)
summary(all.pca)
#4 PCs to capture ~80% of variance
screeplot(all.pca,type="l")
##my ggplot2 theme
multivar.theme <- theme_bw(base_size = 10, base_family = "Arial")+  #this changes the default text size and font
theme(axis.title = element_text(size = 10),                      #this sets a different font size for the axis labels
panel.border = element_rect(size = 1, color = "black"),   #change size= here to change border size
panel.grid.major = element_blank(),                     #these two lines make the grid lines go away
panel.grid.minor = element_blank())
Method <- data$Method
Treatment <- data$Treatment
shape.labels = c("DHS", "DCSE")
col.labels = c("Control", "MeJA")
cols<-c("Cont" = "#1b9e77", "MeJA" = "#d95f02")
ggplot(as.data.frame(all.pca$x), aes(PC1, PC2)) +
geom_point(aes(fill = Treatment, shape = Method), stroke = .5, size = I(3)) +
xlim(-18, 18)+
multivar.theme +
scale_shape_manual(values = c(21, 24),
labels = shape.labels) +
scale_fill_manual(values = cols,
labels = col.labels) +
guides(fill = guide_legend(override.aes = list(color = cols))) +
theme(legend.position = "right", legend.box = "vertical") +
theme(legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.background = element_rect(color = "black")) +
ylab(paste0("PC2 (",round(summary(all.pca)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(all.pca)$importance[2,1]*100, 2), "%)"))
ggsave("Comparison PCA.png", width = 5, height = 3.5, units = "in")
pca.correlations<-PC.cors(all.pca, as.data.frame(data.scaled), 2)
pca.correlations$PC1.r2 <- pca.correlations$PC1.corr.coefs^2
pca.correlations$PC2.r2 <- pca.correlations$PC2.corr.coefs^2
pca.correlations$PC1.p.corrected <- pca.correlations$PC1.p.values %>% p.adjust(method="fdr")
pca.correlations$PC2.p.corrected <- pca.correlations$PC2.p.values %>% p.adjust(method="fdr")
PC1.corr.sig <- pca.correlations %>% subset(PC1.p.corrected <= 0.05 & PC1.r2 >= 0.8,
select = c(.Variables, PC1.corr.coefs, PC1.r2,
PC1.p.corrected))
PC2.corr.sig <- pca.correlations %>% subset(PC2.p.corrected <= 0.05 & PC2.r2 >= 0.8,
select = c(.Variables, PC2.corr.coefs, PC2.r2,
PC2.p.corrected))
PC1.corr.sig[,-1] <- PC1.corr.sig[,-1] %>% signif(digits=3)
PC1.corr.sig
PC2.corr.sig[,-1] <- PC2.corr.sig[,-1] %>% signif(digits=3)
PC2.corr.sig
write.xlsx(PC1.corr.sig, "Comparison PCA compounds.xlsx", sheetName = "PC1", col.names = TRUE, row.names = FALSE)
write.xlsx(PC2.corr.sig, "Comparison PCA compounds.xlsx", sheetName = "PC2", col.names = TRUE, row.names = FALSE, append = TRUE)
PC1.corr.sig <- pca.correlations %>% subset(PC1.p.corrected <= 0.05 & PC1.r2 >= 0.7,
select = c(.Variables, PC1.corr.coefs, PC1.r2,
PC1.p.corrected))
PC2.corr.sig <- pca.correlations %>% subset(PC2.p.corrected <= 0.05 & PC2.r2 >= 0.7,
select = c(.Variables, PC2.corr.coefs, PC2.r2,
PC2.p.corrected))
PC1.corr.sig[,-1] <- PC1.corr.sig[,-1] %>% signif(digits=3)
PC1.corr.sig
PC2.corr.sig[,-1] <- PC2.corr.sig[,-1] %>% signif(digits=3)
PC2.corr.sig
PC1.corr.sig <- pca.correlations %>% subset(PC1.p.corrected <= 0.05 & PC1.r2 >= 0.75,
select = c(.Variables, PC1.corr.coefs, PC1.r2,
PC1.p.corrected))
PC2.corr.sig <- pca.correlations %>% subset(PC2.p.corrected <= 0.05 & PC2.r2 >= 0.75,
select = c(.Variables, PC2.corr.coefs, PC2.r2,
PC2.p.corrected))
PC1.corr.sig[,-1] <- PC1.corr.sig[,-1] %>% signif(digits=3)
PC1.corr.sig
PC2.corr.sig[,-1] <- PC2.corr.sig[,-1] %>% signif(digits=3)
PC2.corr.sig
PC1.corr.sig
PC1.corr.sig <- pca.correlations %>% subset(PC1.p.corrected <= 0.05 & PC1.r2 >= 0.8,
select = c(.Variables, PC1.corr.coefs, PC1.r2,
PC1.p.corrected))
PC2.corr.sig <- pca.correlations %>% subset(PC2.p.corrected <= 0.05 & PC2.r2 >= 0.8,
select = c(.Variables, PC2.corr.coefs, PC2.r2,
PC2.p.corrected))
PC1.corr.sig[,-1] <- PC1.corr.sig[,-1] %>% signif(digits=3)
PC1.corr.sig
PC2.corr.sig[,-1] <- PC2.corr.sig[,-1] %>% signif(digits=3)
PC2.corr.sig
PC1.corr.sig
PC1.corr.sig
treatment_unique_compounds
method_unique_compounds
