{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Proof of concept Field Experiment\"\noutput: html_notebook\n---\n\nThis is code migrated over from TwisterPCA.R and tidied up\n```{r}\nsetwd(\"~/Google Drive/R Code/Twister Data\")\n#setwd(\"/Users/escott03/Google Drive/R Code/Twister Data\")\nlibrary(reshape2)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(readr)\n#library(xlsx)\nlibrary(readxl)\nlibrary(car)\n#library(scales)\n#library(MASS)\nlibrary(RColorBrewer)\nlibrary(venn)\nsource(\"~/Google Drive/R Code/myfunctions.R\")\n```\n\nread in data (updated to Field2.xlsx on Mar 30, 2017)\n```{r}\n#twister <- read_csv(\"Field.csv\")\ntwister <- read_excel(\"Field2.xlsx\", sheet = 3)\ntwister1 <- twister[1:149, 1:12]\ntwister1[is.na(twister1)] = 0 #missing cells represent undetected compounds\ntwist2 = recast(twister1, variable ~ Compound, measure.var = c(2:12)) #this transposes the data so each column is a compound, but it re-orders the columns, which I don't like.\ntwist2\ncolnames(twist2)[1] <- \"samples\"\n#glimpse(twist2)\nsummary(twist2$samples)\n\nTreatment<-c(rep(\"E. obliqua\",3),rep(\"MeJA\",4),rep(\"control\",4))\n```\n#Exploratory stats\nhow many compounds detected total?\n\n```{r}\ndim(twist2)-1 #149\n```\nhow many compounds detected in each treatment?\n\n```{r}\nx <- transmute(twister1, Control = con1 + con2 + con3 + con4,\n               MeJA = meja1 + meja2 + meja3 + meja4,\n               Geometrid = geo1 + geo2 + geo3)\nx[x > 0] = 1\nx$Compound <- twister1$Compound\nx <- dplyr::select(x, Compound, everything())\nvenn(x[ , -1], cexil=1.5, cexsn=1.1)\n\ncolSums(x[ , -1])\n#unique to Geometrid: \nGeometrid.unique <- subset(x, x$Geometrid != 0 & x$MeJA == 0 & x$Control == 0)\nGeometrid.unique\n\n#unique to MeJA:\nMeJA.unique <- subset(x, x$MeJA != 0 & x$Geometrid == 0 & x$Control == 0)\nMeJA.unique\n\n#unique to Control\nControl.unique <- subset(x, x$Control != 0 & x$Geometrid == 0 & x$MeJA == 0)\nControl.unique\n```\n# PCA\n```{r}\ntea.pca2<-prcomp(twist2[ , -1], scale. = TRUE, center = TRUE)\nsummary(tea.pca2)\n#head(tea.pca2$rotation)\n#screeplot(tea.pca2, type=\"lines\")\n```\n\n```{r plot theme}\n##my ggplot2 theme\nmultivar.theme <- theme_bw(base_size = 7, base_family = \"Helvetica\")+  #this changes the default text size and font\n  theme(axis.title = element_text(size = 7),                      #this sets a different font size for the axis labels\n        panel.border = element_rect(size = .5, color = \"black\"),   #change size= here to change border size\n        panel.grid.major = element_blank(),                     #these two lines make the grid lines go away\n        panel.grid.minor = element_blank(),\n        legend.text = element_text(size = 6),                  #legend font size\n        legend.background = element_rect(color = \"black\", size = 0.25),\n        legend.key.size = unit(.75, \"lines\"))                    #spacing between text\n        #legend.spacing = unit(.4, \"lines\"))                     #spacing between legends if > 1\n\n```\n\n```{r, fig.height=2.75, fig.width=3.5}\n####Plotting PCA####\n#Treatment\n\nlabels = expression(\"Control\", italic(\"E. obliqua\"), \"MeJA\")\ncols <- c(\"control\" = \"#1b9e77\", \"MeJA\" = \"#d95f02\", \"E. obliqua\" = \"#7570b3\")\n\n#black, white, and grey\nggplot(as.data.frame(tea.pca2$x), aes(PC1, PC2, fill = Treatment)) + \n  geom_point(size = I(2), shape = 21) + \n  scale_fill_manual(name = NULL, values = c(\"white\", \"grey\", \"black\"), labels = labels) +\n  multivar.theme + \n  theme(legend.position = \"bottom\") +\n  theme(legend.margin = margin(t = 3, b = 3, r = 6, l = 1)) +\n  ylab(paste0(\"PC2 (\",round(summary(tea.pca2)$importance[2,2]*100, 2), \"%)\")) + \n  xlab(paste0(\"PC1 (\",round(summary(tea.pca2)$importance[2,1]*100, 2), \"%)\"))\n\nggsave(\"Field Trial bw3.tiff\", height = 3.5, width = 3.33, units = \"in\")\n\n```\n\n```{r}\npca.correlations <- PC.cors(tea.pca2, as.data.frame(twist2[ , -1]), 2)\npca.correlations$PC1.r2 <- pca.correlations$PC1.corr.coefs^2\npca.correlations$PC2.r2 <- pca.correlations$PC2.corr.coefs^2\npca.correlations$PC1.p.corrected <- pca.correlations$PC1.p.values %>% p.adjust(method=\"fdr\")\npca.correlations$PC2.p.corrected <- pca.correlations$PC2.p.values %>% p.adjust(method=\"fdr\")\n\nPC1.corr.sig <- pca.correlations %>% subset(PC1.p.corrected <= 0.05 & PC1.r2 >= 0.7, \n                                            select = c(.Variables, PC1.corr.coefs, PC1.r2,\n                                                       PC1.p.corrected))\nPC2.corr.sig <- pca.correlations %>% subset(PC2.p.corrected <= 0.05 & PC2.r2 >= 0.7,\n                                            select = c(.Variables, PC2.corr.coefs, PC2.r2,\n                                                       PC2.p.corrected))\nPC1.corr.sig[,-1] <- PC1.corr.sig[,-1] %>% signif(digits=3)\narrange(PC1.corr.sig, PC1.corr.coefs)\n\nPC2.corr.sig[,-1] <- PC2.corr.sig[,-1] %>% signif(digits=3)\narrange(PC2.corr.sig, PC2.corr.coefs)\n\n#xlsx package not working currently, so these don't work.\n#write.xlsx(PC1.corr.sig, \"Field Trial PCA compounds.xlsx\", sheetName = \"PC1\", col.names = TRUE, row.names = FALSE)\n#write.xlsx(PC2.corr.sig, \"Field Trial PCA compounds.xlsx\", sheetName = \"PC2\", col.names = TRUE, row.names = FALSE, append = TRUE)\n```\n\nNicole asks \"Why is `γ-Terpinene` not highly correlated with PC1 when it is absent from control samples but present in both geometrid and MeJA treatments?\"\n\nWell, PC1 is the axis that explains the most variation in the data, so it's likely that even though `γ-Terpinene` might be a good predictor of herbivory, it's not super variable. Let's look at what its loading is on PC1\n\n```{r}\ntea.pca2$rotation[rownames(tea.pca2$rotation) == \"γ-Terpinene\" , 1]\nhead(sort(tea.pca2$rotation[ ,1]))\n#which PC has the greatest loading for gamma terpinene?\ntea.pca2$rotation[rownames(tea.pca2$rotation) == \"γ-Terpinene\", ]\n#PC3\nhead(sort(tea.pca2$rotation[ , 3]))\n```\nIt's not very heavily weighting PC1 compared to other compounds.  Maybe it is at very low concentrations when it is present.  A bunch of zeros and a bunch of low concentration values would have very low variance.\n\n```{r}\nselect(twist2, samples, `γ-Terpinene`)\n```\n\n# ANOVA\n\n```{r}\ndf <- data.frame(treatment = Treatment, PC1 = tea.pca2$x[ , 1], PC2 = tea.pca2$x[ , 2])\ndf\nanova(lm(PC1 ~ treatment, data = df))\nanova(lm(PC2 ~ treatment, data = df))\n```\n\n\n\n\nAn alternative method might be to use FDR corrected t-tests since it is very clear that PC1 separates the methods and PC2 separates the treatments\n\n```{r}\n\nimportant.PC1.data <- select(data, one_of(as.character(PC1.corr.sig$.Variables)))\n\nsig.tests.PC1 <- vector(mode = \"numeric\", length = length(important.PC1.data))\nfor(i in 1:length(important.PC1.data)){\n  test <- t.test(important.PC1.data[[i]] ~ data$Method)\n  sig.tests.PC1[i] <- test$p.value\n}\n\nimportant.PC2.data <- select(data, one_of(as.character(PC2.corr.sig$.Variables)))\n\nsig.tests.PC2 <- vector(mode = \"numeric\", length = length(important.PC2.data))\nfor(i in 1:length(important.PC2.data)){\n  test <- t.test(important.PC2.data[[i]] ~ data$Treatment)\n  sig.tests.PC2[i] <- test$p.value\n}\n```\n",
    "created" : 1489008987246.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3809761805",
    "id" : "BA3D33CB",
    "lastKnownWriteTime" : 1497244276,
    "last_content_update" : 1497246717885,
    "path" : "~/Google Drive/R Code/Twister Data/Field Experiment.Rmd",
    "project_path" : "Field Experiment.Rmd",
    "properties" : {
        "chunk_output_type" : "inline",
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}