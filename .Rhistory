colnames(x) <- input2$Treatment
x.data <- transmute(x, DHS.Tenax = Tenax.Cont.1 + Tenax.Cont.2 + Tenax.Cont.3 +
Tenax.MeJA.1 + Tenax.MeJA.2 + Tenax.MeJA.3,
DCSE.Twister = Twister.Cont.1 + Twister.Cont.2 + Twister.Cont.3 +
Twister.MeJA.1 + Twister.MeJA.2 + Twister.MeJA.3)
x.data$Compound <- rownames(x)
x.data <- dplyr::select(x.data, Compound, everything())
x.logical <- x.data
x.logical[x.data > 0] = 1
tail(x.logical)
venn(x.logical[ , -1], cexil = 1, cexsn = .85)
DHS.Tenax.unique <- subset(x.data, x.data$DHS.Tenax != 0 & x.data$DCSE.Twister == 0)
dim(DHS.Tenax.unique)[1]
DCSE.Twister.unique <- subset(x.data, x.data$DCSE.Twister !=0 & x.data$DHS.Tenax == 0)
dim(DCSE.Twister.unique)[1]
rbind(DHS.Tenax.unique, DCSE.Twister.unique) -> method_unique_compounds
left_join(method_unique_compounds, library, by = c("Compound" = "IA_Name")) %>% select(Compound, DHS.Tenax, DCSE.Twister, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> method_unique_compounds
colSums(x.logical[ , -1])
x.trt.data <- transmute(x, Control = mean(Tenax.Cont.1, Tenax.Cont.2, Tenax.Cont.3,
Twister.Cont.1, Twister.Cont.2, Twister.Cont.3,
MeJA = mean(Tenax.MeJA.1, Tenax.MeJA.2, Tenax.MeJa.3,
Twister.MeJA.1, Twister.MeJA.2, Twister.MeJA.3)))
x.trt.data <- transmute(x, Control = mean(Tenax.Cont.1, Tenax.Cont.2, Tenax.Cont.3,
Twister.Cont.1, Twister.Cont.2, Twister.Cont.3),
MeJA = mean(Tenax.MeJA.1, Tenax.MeJA.2, Tenax.MeJa.3,
Twister.MeJA.1, Twister.MeJA.2, Twister.MeJA.3))
mean(Tenax.Cont.1, Tenax.Cont.2, Tenax.Cont.3,
Twister.Cont.1, Twister.Cont.2, Twister.Cont.3)
x.trt.data <- transmute(x, Control = cummean(Tenax.Cont.1, Tenax.Cont.2, Tenax.Cont.3,
Twister.Cont.1, Twister.Cont.2, Twister.Cont.3),
MeJA = cummean(Tenax.MeJA.1, Tenax.MeJA.2, Tenax.MeJa.3,
Twister.MeJA.1, Twister.MeJA.2, Twister.MeJA.3))
x
twist1
twist2
data
data
data %>% group_by(Method) %>% summarise_all(funs(mean)
data %>% group_by(Method) %>% summarise_all(funs(mean))
data %>% group_by(Method) %>% summarise_all(funs(mean))
data %>% group_by(Method) %>% summarise_all(funs(mean)) %>% t()
data %>% group_by(Method) %>% summarise_all(funs(mean)) %>% compare.data
data %>% group_by(Method) %>% summarise_all(funs(mean)) -> compare.data
compare.data
compare.data[-2]
compare.data[-2] %>% t()
compare.data[-1:2] %>% t()
compare.data[-1:2]
compare.data[ , -1:2]
compare.data[ , -(1:2)]
compare.data[ , -(1:2)] %>% t()
compare.data[ , -(1:2)] %>% t() %>% as.data.frame()
compare.data
compare.data[ , -(1:2)] %>% t()
compare.data
data %>% group_by(Method) %>% summarise_all(funs(mean)) -> compare.data
compare.data[ , -(1:2)] %>% t() %>% as.data.frame() -> compare.data
colnames(compare.data) <- c("DHS", "DCSE")
compare.data
compare.data %>% filter(DHS == 0 & DCSE != 0)
compare.data %>% filter(DHS == 0 & DCSE != 0 | DHS !=0 & DCSE ==0)
method_unique_compounds
data %>% group_by(Method) %>% summarise_all(funs(mean)) -> compare.data
compare.data[ , -(1:2)] %>% t() %>% as.data.frame() -> compare.data
colnames(compare.data) <- c("DHS", "DCSE")
compare.data %>% filter(DHS == 0 & DCSE != 0 | DHS !=0 & DCSE ==0) %>% method_unique_compounds
data %>% group_by(Method) %>% summarise_all(funs(mean)) -> compare.data
compare.data[ , -(1:2)] %>% t() %>% as.data.frame() -> compare.data
colnames(compare.data) <- c("DHS", "DCSE")
compare.data %>% filter(DHS == 0 & DCSE != 0 | DHS !=0 & DCSE ==0) -> method_unique_compounds
left_join(method_unique_compounds, library, by = c("Compound" = "IA_Name")) %>% select(Compound, DHS.Tenax, DCSE.Twister, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> method_unique_compounds
method_unique_compounds
data %>% group_by(Method) %>% summarise_all(funs(mean)) -> compare.data
compare.data
compare.data[ , -(1:2)] %>% t() %>% as.data.frame() -> compare.data
compare.data
colnames(compare.data) <- c("DHS", "DCSE")
compare.data
compare.data$Compound <- rownames(compare.data)
compare.data
rownames(compare.data) <- NULL
compare.data
select(compare.data, Compound, everything())
select(compare.data, Compound, everything()) %>% filter(DHS == 0 & DCSE != 0 | DHS !=0 & DCSE ==0) -> method_unique_compounds
method_unique_compounds
left_join(method_unique_compounds, library, by = c("Compound" = "IA_Name")) %>% select(Compound, DHS.Tenax, DCSE.Twister, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> method_unique_compounds
left_join(method_unique_compounds, library, by = c("Compound" = "IA_Name")) %>% select(Compound, DHS, DCSE, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> method_unique_compounds
method_unique_compounds
x.logical
logical(method_unique_compounds)
method_unique.logical[method_unique.logical$DHS != 0]
method_unique_compounds[method_unique_compounds$DHS != 0]
method_unique_compounds[method_unique_compounds$DHS != 0, ]
method_unique_compounds$DHS[method_unique_compounds$DHS != 0, ]
method_unique_compounds$DHS[method_unique_compounds$DHS != 0]
method_unique.logical <- method_unique_compounds
method_unique.locial$DHS[method_unique.logical$DHS != 0] <- 1
method_unique.logical$DHS[method_unique.logical$DHS != 0] <- 1
method_unique.logical$DCSE[method_unique.logical$DCSE !=0] <- 1
venn(method_unique.logical[ , -1], cexil = 1, cexsn = .85)
method_unique.logical
venn(method_unique.logical[ , 2:3], cexil = 1, cexsn = .85)
t(data[ , 3:length(data)]) %>% as.data.frame() -> x
colnames(x) <- input2$Treatment
x.data <- transmute(x, DHS.Tenax = Tenax.Cont.1 + Tenax.Cont.2 + Tenax.Cont.3 +
Tenax.MeJA.1 + Tenax.MeJA.2 + Tenax.MeJA.3,
DCSE.Twister = Twister.Cont.1 + Twister.Cont.2 + Twister.Cont.3 +
Twister.MeJA.1 + Twister.MeJA.2 + Twister.MeJA.3)
x.data$Compound <- rownames(x)
x.data <- dplyr::select(x.data, Compound, everything())
x.logical <- x.data
x.logical[x.data > 0] = 1
tail(x.logical)
venn(x.logical[ , -1], cexil = 1, cexsn = .85)
DHS.Tenax.unique <- subset(x.data, x.data$DHS.Tenax != 0 & x.data$DCSE.Twister == 0)
dim(DHS.Tenax.unique)[1]
DCSE.Twister.unique <- subset(x.data, x.data$DCSE.Twister !=0 & x.data$DHS.Tenax == 0)
dim(DCSE.Twister.unique)[1]
rbind(DHS.Tenax.unique, DCSE.Twister.unique) -> method_unique_compounds
left_join(method_unique_compounds, library, by = c("Compound" = "IA_Name")) %>% select(Compound, DHS.Tenax, DCSE.Twister, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> method_unique_compounds
colSums(x.logical[ , -1])
compare.data
method.logical <- compare.data
method.logical
method.logical <- compare.data
method.logical$DHS[method.logical$DHS != 0] <- 1
method.logical$DCSE[method.logical$DCSE !=0] <- 1
venn(method.logical[ , 2:3], cexil = 1, cexsn = .85)
method.logical
venn(method.logical[ , 1:2], cexil = 1, cexsn = .85)
method_unique_compounds
data %>% group_by(Method) %>% summarise_all(funs(mean)) -> compare.data
compare.data[ , -(1:2)] %>% t() %>% as.data.frame() -> compare.data
colnames(compare.data) <- c("DHS", "DCSE")
compare.data$Compound <- rownames(compare.data)
rownames(compare.data) <- NULL
##Venn Diagram
method.logical <- compare.data
method.logical$DHS[method.logical$DHS != 0] <- 1
method.logical$DCSE[method.logical$DCSE !=0] <- 1
venn(method.logical[ , 1:2], cexil = 1, cexsn = .85)
#Extract Unique Compounds
select(compare.data, Compound, everything()) %>% filter(DHS == 0 & DCSE != 0 | DHS !=0 & DCSE ==0) -> method_unique_compounds
left_join(method_unique_compounds, library, by = c("Compound" = "IA_Name")) %>% select(Compound, DHS, DCSE, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> method_unique_compounds
method_unique_compounds
filter(method_unique_compounds, DHS != 0)
dim(filter(method_unique_compounds, DHS != 0))
dim(filter(method_unique_compounds, DHS != 0))[1]
data %>% group_by(Method) %>% summarise_all(funs(mean)) -> compare.data
compare.data[ , -(1:2)] %>% t() %>% as.data.frame() -> compare.data
colnames(compare.data) <- c("DHS", "DCSE")
compare.data$Compound <- rownames(compare.data)
rownames(compare.data) <- NULL
##Venn Diagram
method.logical <- compare.data
method.logical$DHS[method.logical$DHS != 0] <- 1
method.logical$DCSE[method.logical$DCSE !=0] <- 1
venn(method.logical[ , 1:2], cexil = 1, cexsn = .85)
#Extract Unique Compounds
select(compare.data, Compound, everything()) %>% filter(DHS == 0 & DCSE != 0 | DHS !=0 & DCSE ==0) -> method_unique_compounds
left_join(method_unique_compounds, library, by = c("Compound" = "IA_Name")) %>% select(Compound, DHS, DCSE, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> method_unique_compounds
method_unique_compounds
dim(filter(method_unique_compounds, DHS != 0))[1]
data
data
data %>% group_by(Treatment) %>% summarise_all(funs(mean)) -> treatment.data
treatment.data
treatment.data[ , -(1:2)] %>% t() %>% as.data.frame() -> treatment.data
treatment.data
data %>% group_by(Treatment) %>% summarise_all(funs(mean)) -> treatment.data
treatment.data
treatment.data[ , -(1:2)] %>% t() %>% as.data.frame() -> treatment.data
treatment.data
colnames(treatment.data) <- c("Control", "MeJA")
treatment.data
treatment.data$Compound <- rownames(treatment.data)
rownames(treatment.data) <- NULL
treatment.data
treatment.logical <- treatment.data
treatment.logical$DHS[treatment.logical$DHS != 0] <- 1
treatment.logical$Control[treatment.logical$Control != 0] <- 1
treatment.logical$MeJA[treatment.logical$MeJA !=0] <- 1
venn(treatment.logical[ , 1:2], cexil = 1, cexsn = .85)
data %>% group_by(Treatment) %>% summarise_all(funs(mean)) -> treatment.data
treatment.data[ , -(1:2)] %>% t() %>% as.data.frame() -> treatment.data
colnames(treatment.data) <- c("Control", "MeJA")
treatment.data$Compound <- rownames(treatment.data)
rownames(treatment.data) <- NULL
##Venn Diagram
treatment.logical <- treatment.data
treatment.logical$Control[treatment.logical$Control != 0] <- 1
treatment.logical$MeJA[treatment.logical$MeJA !=0] <- 1
venn(treatment.logical[ , 1:2], cexil = 1, cexsn = .85)
#Extract Unique Compounds
select(treatment.data, Compound, everything()) %>% filter(Control == 0 & MeJA != 0 | Control !=0 & MeJA ==0) -> treatment_unique_compounds
left_join(treatment_unique_compounds, library, by = c("Compound" = "IA_Name")) %>% select(Compound, DHS, DCSE, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> treatment_unique_compounds
data %>% group_by(Treatment) %>% summarise_all(funs(mean)) -> treatment.data
treatment.data[ , -(1:2)] %>% t() %>% as.data.frame() -> treatment.data
colnames(treatment.data) <- c("Control", "MeJA")
treatment.data$Compound <- rownames(treatment.data)
rownames(treatment.data) <- NULL
##Venn Diagram
treatment.logical <- treatment.data
treatment.logical$Control[treatment.logical$Control != 0] <- 1
treatment.logical$MeJA[treatment.logical$MeJA !=0] <- 1
venn(treatment.logical[ , 1:2], cexil = 1, cexsn = .85)
#Extract Unique Compounds
select(treatment.data, Compound, everything()) %>% filter(Control == 0 & MeJA != 0 | Control !=0 & MeJA ==0) -> treatment_unique_compounds
left_join(treatment_unique_compounds, library, by = c("Compound" = "IA_Name")) %>% select(Compound, Control, MeJA, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> treatment_unique_compounds
treatment_unique_compounds
data %>% group_by(Treatment, Method) %>% summarise_all(funs(mean))
data %>% group_by(Treatment, Method) %>% summarise_all(funs(mean)) -> combo.data
combo.data[ , -(1:2)] %>% t() %>% as.data.frame() -> combo.data
combo.data
data %>% group_by(Treatment, Method) %>% summarise_all(funs(mean)) -> combo.data
combo.data
paste(combo.data[ , 1], combo.data[ , 2], sep = ".")
combo.data[ , 1]
combo.data[ , 2]
paste(as.character(combo.data[ , 1]), as.character(combo.data[ , 2]), sep = ".")
combo.data[ , 1]
paste(as.character(combo.data$Method), as.character(combo.data$Treatment), sep = ".")
paste(combo.data$Method, combo.data$Treatment, sep = ".")
colnames(combo.data) <- paste(combo.data$Method, combo.data$Treatment, sep = ".")
combo.data$Compound <- rownames(combo.data)
rownames(combo.data) <- NULL
combo.data
data %>% group_by(Treatment, Method) %>% summarise_all(funs(mean)) -> combo.data
combo.data
data %>% group_by(Treatment, Method) %>% summarise_all(funs(mean)) -> combo.data
combo.data[ , -(1:2)] %>% t() %>% as.data.frame() -> combo.data1
colnames(combo.data1) <- paste(combo.data$Method, combo.data$Treatment, sep = ".")
combo.data1$Compound <- rownames(combo.data1)
rownames(combo.data1) <- NULL
combo.data1
combo.logical <- combo.data
combo.logical$Tenax.Cont[combo.logical$Tenax.Cont != 0] <- 1
combo.logical$Twister.Cont[combo.logical$Twister.Cont != 0] <- 1
combo.logical$Tenax.MeJA[combo.logical$Tenax.MeJA != 0] <- 1
combo.logical$Twister.MeJA[combo.logical$Twister.MeJA != 0] <- 1
combo.logical$Tenax.Cont[combo.logical$Tenax.Cont != 0] <- 1
combo.logical$Tenax.Cont[combo.logical$Tenax.Cont != 0]
combo.logical
combo.logical <- combo.data1
combo.logical$Tenax.Cont[combo.logical$Tenax.Cont != 0] <- 1
combo.logical$Twister.Cont[combo.logical$Twister.Cont != 0] <- 1
combo.logical$Tenax.MeJA[combo.logical$Tenax.MeJA != 0] <- 1
combo.logical$Twister.MeJA[combo.logical$Twister.MeJA != 0] <- 1
venn(combo.logical[ , 1:2], cexil = 1, cexsn = .85)
combo.logical
venn(combo.logical[ , 1:4], cexil = 1, cexsn = .85)
write.xlsx(method_unique_compounds, "unique compounds DHS comparison.xlsx",
sheetName = "By Method", row.names = FALSE)
write.xlsx(treatment_unique_compounds, "unique compounds DHS comparison.xlsx",
sheetName = "By Treatment", row.names = FALSE, append = TRUE)
#setwd("/Users/scottericr/Google Drive/R Code/Twister Data")
library(reshape2)
library(tidyr)
library(dplyr)
library(venn)
library(ggplot2)
library(readr)
library(xlsx)
source("/Users/scottericr/Google Drive/R Code/myfunctions.R")
#setwd("/Users/scottericr/Google Drive/R Code/Twister Data")
library(reshape2)
library(tidyr)
library(dplyr)
library(venn)
library(ggplot2)
library(readr)
library(xlsx)
source("~/Google Drive/R Code/myfunctions.R")
input <- read_csv("DHS Comparison updated 4-7-2017.csv") #Nicole added back two compounds she previously removed as contaminants.  They're not actually contaminants.
input2 <- input[1:12, ]
#glimpse(input2)
input2[is.na(input2)] <- 0  #NA's represent 0's
#Read in annotated library for later extraction of LogKOW and vapor pressure
#library <- read_csv("annotated library mar 13 2017.csv")
library <- read_csv("annotated library apr 6 2017.csv")
vars <- colsplit(input2$Treatment, "\\.", c("Method", "Treatment", "Rep"))
vars
len <- dim(input2)[2]
data <- cbind(vars$Method, vars$Treatment, input2[ , 2:len])
input2
input <- read_csv("DHS Comparison updated 4-7-2017.csv") #Nicole added back two compounds she previously removed as contaminants.  They're not actually contaminants.
input2 <- input[1:12, ]
#glimpse(input2)
input2[is.na(input2)] <- 0  #NA's represent 0's
#Read in annotated library for later extraction of LogKOW and vapor pressure
#library <- read_csv("annotated library mar 13 2017.csv")
library <- read_csv("annotated library apr 6 2017.csv")
vars <- colsplit(input2$Treatment, "\\.", c("Method", "Treatment", "Rep"))
vars
len <- dim(input2)[2]
data <- cbind(vars$Method, vars$Treatment, input2[ , 2:len])
vars
input2$Treatment
input2
input <- read_csv("DHS Comparison updated 4-7-2017.csv") #Nicole added back two compounds she previously removed as contaminants.  They're not actually contaminants.
input2 <- input[1:12, ]
#glimpse(input2)
input2[is.na(input2)] <- 0  #NA's represent 0's
#Read in annotated library for later extraction of LogKOW and vapor pressure
#library <- read_csv("annotated library mar 13 2017.csv")
library <- read_csv("annotated library apr 6 2017.csv")
vars <- colsplit(input2$Treatment, "\\.", c("Method", "Treatment", "Rep"))
vars
len <- dim(input2)[2]
data <- cbind(vars$Method, vars$Treatment, input2[ , 2:len])
colnames(data)[1:2] <- c("Method","Treatment")
head(data)
#glimpse(data)
input <- read_csv("DHS Comparison updated 4-7-2017.csv") #Nicole added back two compounds she previously removed as contaminants.  They're not actually contaminants.
input2 <- input[1:12, ]
#glimpse(input2)
input2[is.na(input2)] <- 0  #NA's represent 0's
#Read in annotated library for later extraction of LogKOW and vapor pressure
#library <- read_csv("annotated library mar 13 2017.csv")
library <- read_csv("annotated library apr 6 2017.csv")
vars <- colsplit(input2$Treatment, "\\.", c("Method", "Treatment", "Rep"))
vars
len <- dim(input2)[2]
data <- cbind(vars$Method, vars$Treatment, input2[ , 2:len])
colnames(data)[1:2] <- c("Method","Treatment")
head(data)
#glimpse(data)
counts<-head(summarise_each(data, funs(n_distinct)))
rm <- which(counts <= 1)
rm
data <- subset(data, select = -rm)
#glimpse(data)
data %>% group_by(Method) %>% summarise_all(funs(mean)) -> compare.data
data
vars <- colsplit(input2$Treatment, "\\.", c("Method", "Treatment", "Rep"))
vars
len <- dim(input2)[2]
data <- cbind(vars$Method, vars$Treatment, input2[ , 2:len])
colnames(data)[1:2] <- c("Method","Treatment")
head(data)
#glimpse(data)
data %>% group_by(Method) %>% summarise_all(funs(mean)) -> compare.data
compare.data[ , -(1:2)] %>% t() %>% as.data.frame() -> compare.data
colnames(compare.data) <- c("DHS", "DCSE")
compare.data$Compound <- rownames(compare.data)
rownames(compare.data) <- NULL
##Venn Diagram
method.logical <- compare.data
method.logical$DHS[method.logical$DHS != 0] <- 1
method.logical$DCSE[method.logical$DCSE !=0] <- 1
venn(method.logical[ , 1:2], cexil = 1, cexsn = .85)
#Extract Unique Compounds
select(compare.data, Compound, everything()) %>% filter(DHS == 0 & DCSE != 0 | DHS !=0 & DCSE ==0) -> method_unique_compounds
compare.data
method.logical <- compare.data
method.logical$DHS[method.logical$DHS != 0] <- 1
method.logical$DCSE[method.logical$DCSE !=0] <- 1
method.logical
select(compare.data, Compound, everything()) %>% filter(DHS == 0 & DCSE != 0 | DHS !=0 & DCSE ==0) -> method_unique_compounds
compare.data
compare.data
data
input <- read_csv("DHS Comparison updated 4-7-2017.csv") #Nicole added back two compounds she previously removed as contaminants.  They're not actually contaminants.
input2 <- input[1:12, ]
#glimpse(input2)
input2[is.na(input2)] <- 0  #NA's represent 0's
#Read in annotated library for later extraction of LogKOW and vapor pressure
#library <- read_csv("annotated library mar 13 2017.csv")
library <- read_csv("annotated library apr 6 2017.csv")
vars <- colsplit(input2$Treatment, "\\.", c("Method", "Treatment", "Rep"))
vars
len <- dim(input2)[2]
data <- cbind(vars$Method, vars$Treatment, input2[ , 2:len])
colnames(data)[1:2] <- c("Method","Treatment")
head(data)
#glimpse(data)
counts <- head(summarise_each(data, funs(n_distinct)))
rm <- which(counts <= 1)
rm
#REMINDER TO INSERT IF STATEMENT SO IT DOESN"T RUN IF RM IS LENGHT 0"
data <- subset(data, select = -rm)
#glimpse(data)
input <- read_csv("DHS Comparison updated 4-7-2017.csv") #Nicole added back two compounds she previously removed as contaminants.  They're not actually contaminants.
input2 <- input[1:12, ]
#glimpse(input2)
input2[is.na(input2)] <- 0  #NA's represent 0's
#Read in annotated library for later extraction of LogKOW and vapor pressure
#library <- read_csv("annotated library mar 13 2017.csv")
library <- read_csv("annotated library apr 6 2017.csv")
vars <- colsplit(input2$Treatment, "\\.", c("Method", "Treatment", "Rep"))
vars
len <- dim(input2)[2]
data <- cbind(vars$Method, vars$Treatment, input2[ , 2:len])
colnames(data)[1:2] <- c("Method","Treatment")
head(data)
#glimpse(data)
data %>% group_by(Method) %>% summarise_all(funs(mean)) -> compare.data
compare.data[ , -(1:2)] %>% t() %>% as.data.frame() -> compare.data
colnames(compare.data) <- c("DHS", "DCSE")
compare.data$Compound <- rownames(compare.data)
rownames(compare.data) <- NULL
##Venn Diagram
method.logical <- compare.data
method.logical$DHS[method.logical$DHS != 0] <- 1
method.logical$DCSE[method.logical$DCSE !=0] <- 1
venn(method.logical[ , 1:2], cexil = 1, cexsn = .85)
#Extract Unique Compounds
select(compare.data, Compound, everything()) %>% filter(DHS == 0 & DCSE != 0 | DHS !=0 & DCSE ==0) -> method_unique_compounds
left_join(method_unique_compounds, library, by = c("Compound" = "IA_Name")) %>% select(Compound, DHS, DCSE, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> method_unique_compounds
method_unique_compounds
colSums(method.logical[ , 1:2])[1]
colSums(method.logical[ , 1:2])[2]
colSums(method.logical[ , 1:2])
dim(method.logical)
data %>% group_by(Treatment) %>% summarise_all(funs(mean)) -> treatment.data
treatment.data[ , -(1:2)] %>% t() %>% as.data.frame() -> treatment.data
colnames(treatment.data) <- c("Control", "MeJA")
treatment.data$Compound <- rownames(treatment.data)
rownames(treatment.data) <- NULL
##Venn Diagram
treatment.logical <- treatment.data
treatment.logical$Control[treatment.logical$Control != 0] <- 1
treatment.logical$MeJA[treatment.logical$MeJA !=0] <- 1
venn(treatment.logical[ , 1:2], cexil = 1, cexsn = .85)
#Extract Unique Compounds
select(treatment.data, Compound, everything()) %>% filter(Control == 0 & MeJA != 0 | Control !=0 & MeJA ==0) -> treatment_unique_compounds
left_join(treatment_unique_compounds, library, by = c("Compound" = "IA_Name")) %>% select(Compound, Control, MeJA, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> treatment_unique_compounds
treatment_unique_compounds
colSums(treatment.logical[ , 1:2])
data %>% group_by(Treatment, Method) %>% summarise_all(funs(mean)) -> combo.data
combo.data[ , -(1:2)] %>% t() %>% as.data.frame() -> combo.data1
colnames(combo.data1) <- paste(combo.data$Method, combo.data$Treatment, sep = ".")
combo.data1$Compound <- rownames(combo.data1)
rownames(combo.data1) <- NULL
##Venn Diagram
combo.logical <- combo.data1
combo.logical$Tenax.Cont[combo.logical$Tenax.Cont != 0] <- 1
combo.logical
data %>% group_by(Treatment, Method) %>% summarise_all(funs(mean)) -> combo.data
combo.data[ , -(1:2)] %>% t() %>% as.data.frame() -> combo.data1
colnames(combo.data1) <- paste(combo.data$Method, combo.data$Treatment, sep = ".")
combo.data1$Compound <- rownames(combo.data1)
rownames(combo.data1) <- NULL
##Venn Diagram
combo.logical <- combo.data1
combo.logical$DHS.Cont[combo.logical$DHS.Cont != 0] <- 1
combo.logical$DCSE.Cont[combo.logical$DCSE.Cont != 0] <- 1
combo.logical$DHS.MeJA[combo.logical$DHS.MeJA != 0] <- 1
combo.logical$DCSE.MeJA[combo.logical$DCSE.MeJA != 0] <- 1
venn(combo.logical[ , 1:4], cexil = 1, cexsn = .85)
combo.data1
colSums(combo.logical[ , 1:4])
write.xlsx(method_unique_compounds, "unique compounds DHS comparison.xlsx",
sheetName = "By Method", row.names = FALSE)
write.xlsx(treatment_unique_compounds, "unique compounds DHS comparison.xlsx",
sheetName = "By Treatment", row.names = FALSE, append = TRUE)
data.scaled <- scale(data[3:length(data)])
all.pca <- prcomp(data.scaled, scale. = FALSE, center = FALSE)
summary(all.pca)
#4 PCs to capture ~80% of variance
#screeplot(all.pca,type="l")
##my ggplot2 theme
multivar.theme <- theme_bw(base_size = 10, base_family = "Arial")+  #this changes the default text size and font
theme(axis.title = element_text(size = 10),                      #this sets a different font size for the axis labels
panel.border = element_rect(size = 1, color = "black"),   #change size= here to change border size
panel.grid.major = element_blank(),                     #these two lines make the grid lines go away
panel.grid.minor = element_blank())
Method <- data$Method
Treatment <- data$Treatment
shape.labels = c("DHS", "DCSE")
col.labels = c("Control", "MeJA")
cols<-c("Cont" = "#1b9e77", "MeJA" = "#d95f02")
ggplot(as.data.frame(all.pca$x), aes(PC1, PC2)) +
geom_point(aes(fill = Treatment, shape = Method), stroke = .5, size = I(3)) +
xlim(-18, 18)+
multivar.theme +
scale_shape_manual(values = c(21, 24),
labels = shape.labels) +
scale_fill_manual(values = cols,
labels = col.labels) +
guides(fill = guide_legend(override.aes = list(color = cols))) +
theme(legend.position = "right", legend.box = "vertical") +
theme(legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.background = element_rect(color = "black")) +
ylab(paste0("PC2 (",round(summary(all.pca)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(all.pca)$importance[2,1]*100, 2), "%)"))
#ggsave("Comparison PCA.png", width = 5, height = 3.5, units = "in")
pca.correlations<-PC.cors(all.pca, as.data.frame(data.scaled), 2)
pca.correlations$PC1.r2 <- pca.correlations$PC1.corr.coefs^2
pca.correlations$PC2.r2 <- pca.correlations$PC2.corr.coefs^2
pca.correlations$PC1.p.corrected <- pca.correlations$PC1.p.values %>% p.adjust(method="fdr")
pca.correlations$PC2.p.corrected <- pca.correlations$PC2.p.values %>% p.adjust(method="fdr")
PC1.corr.sig <- pca.correlations %>% subset(PC1.p.corrected <= 0.05 & PC1.r2 >= 0.8,
select = c(.Variables, PC1.corr.coefs, PC1.r2,
PC1.p.corrected))
PC2.corr.sig <- pca.correlations %>% subset(PC2.p.corrected <= 0.05 & PC2.r2 >= 0.8,
select = c(.Variables, PC2.corr.coefs, PC2.r2,
PC2.p.corrected))
PC1.corr.sig[,-1] <- PC1.corr.sig[,-1] %>% signif(digits=3)
PC2.corr.sig[,-1] <- PC2.corr.sig[,-1] %>% signif(digits=3)
left_join(PC1.corr.sig, library, by = c(".Variables" = "IA_Name")) %>% select(Compound = .Variables, PC1.corr.coefs, PC1.r2, PC1.p.corrected, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> PC1.corr.sig
PC1.corr.sig
left_join(PC2.corr.sig, library, by = c(".Variables" = "IA_Name")) %>% select(Compound = .Variables, PC2.corr.coefs, PC2.r2, PC2.p.corrected, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> PC2.corr.sig
PC2.corr.sig
write.xlsx(PC1.corr.sig, "PCA compounds DHS comparison.xlsx",
sheetName = "PC1", col.names = TRUE, row.names = FALSE)
write.xlsx(PC2.corr.sig, "PCA compounds DHS comparison.xlsx",
sheetName = "PC2", col.names = TRUE, row.names = FALSE, append = TRUE)
arrange(PC1.corr.sig, PC1.corr.coefs)
combo.logical
combo.data1
