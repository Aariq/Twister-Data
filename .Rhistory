colSums(treatment.logical[ , 1:2])
data %>% group_by(Treatment, Method) %>% summarise_all(funs(mean)) -> combo.data
combo.data[ , -(1:2)] %>% t() %>% as.data.frame() -> combo.data1
colnames(combo.data1) <- paste(combo.data$Method, combo.data$Treatment, sep = ".")
combo.data1$Compound <- rownames(combo.data1)
rownames(combo.data1) <- NULL
##Venn Diagram
combo.logical <- combo.data1
combo.logical$DHS.Cont[combo.logical$DHS.Cont != 0] <- 1
combo.logical$DCSE.Cont[combo.logical$DCSE.Cont != 0] <- 1
combo.logical$DHS.MeJA[combo.logical$DHS.MeJA != 0] <- 1
combo.logical$DCSE.MeJA[combo.logical$DCSE.MeJA != 0] <- 1
venn(combo.logical[ , 1:4], cexil = 1, cexsn = .85)
colSums(combo.logical[ , 1:4])
#unique to MeJA/DCSE combo
combo.logical %>% filter(DCSE.MeJA == 1, DCSE.Cont == 0, DHS.Cont == 0, DHS.MeJA == 0)
#unique to MeJA/DHS combo
combo.logical %>% filter(DCSE.MeJA == 0, DCSE.Cont == 0, DHS.Cont == 0, DHS.MeJA == 1)
data.scaled <- scale(data[3:length(data)])
all.pca <- prcomp(data.scaled, scale. = FALSE, center = FALSE)
summary(all.pca)
#4 PCs to capture ~80% of variance
#screeplot(all.pca,type="l")
##my ggplot2 theme
multivar.theme <- theme_bw(base_size = 7, base_family = "Helvetica")+  #this changes the default text size and font
theme(axis.title = element_text(size = 7),                      #this sets a different font size for the axis labels
panel.border = element_rect(size = .5, color = "black"),   #change size= here to change border size
panel.grid.major = element_blank(),                     #these two lines make the grid lines go away
panel.grid.minor = element_blank(),
legend.text = element_text(size = 7),                  #legend font size
legend.background = element_rect(color = "black", size = 0.25),
legend.key.size = unit(.75, "lines"))
#legend.spacing = unit(.4, "lines"))         #changes horizontal spacing
Method <- data$Method
Treatment <- data$Treatment
levels(Treatment) <- c("Control", "MeJA")
Combined <- as.factor(paste(Method, Treatment))
#black and white with open vs. closed triangles and circles
#shape.labels = c("DCSE", "DHS")
#col.labels = c("Control", "MeJA")
cols <- c("Control" = "NA", "MeJA" = "black")
ggplot(as.data.frame(all.pca$x), aes(PC1, PC2)) +
geom_point(aes(shape = Combined), size = I(2)) +
xlim(-18, 18) +
multivar.theme +
#scale_fill_manual(name = "Method and Treatment",
#                   labels = Combined,
#                  values = cols) +
scale_shape_manual(name = NULL,
values = c(16, 17, 1, 2),
labels = levels(Combined)) +
#guides(fill = guide_legend(override.aes = list(color = cols))) +
#theme(legend.position = "right", legend.box = "vertical") +
ylab(paste0("PC2 (",round(summary(all.pca)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(all.pca)$importance[2,1]*100, 2), "%)"))
ggsave("Comparison PCA bw.png", width = 5, height = 3.33, units = "in")
#black and white all different shapes
ggplot(as.data.frame(all.pca$x), aes(PC1, PC2)) +
geom_point(aes(shape = Combined), size = I(2)) +
xlim(-18, 18) +
multivar.theme +
#scale_fill_manual(name = "Method and Treatment",
#                   labels = Combined,
#                  values = cols) +
scale_shape_manual(name = NULL,
values = c(0, 1, 2, 5),
labels = levels(Combined)) +
#guides(fill = guide_legend(override.aes = list(color = cols))) +
#theme(legend.position = "right", legend.box = "vertical") +
ylab(paste0("PC2 (",round(summary(all.pca)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(all.pca)$importance[2,1]*100, 2), "%)"))
ggsave("Comparison PCA bw diff shapes.png", width = 5, height = 3.33, units = "in")
Method <- data$Method
Treatment <- data$Treatment
levels(Treatment) <- c("Control", "MeJA")
Combined <- as.factor(paste(Method, Treatment))
#black and white with open vs. closed triangles and circles
#shape.labels = c("DCSE", "DHS")
#col.labels = c("Control", "MeJA")
cols <- c("Control" = "NA", "MeJA" = "black")
ggplot(as.data.frame(all.pca$x), aes(PC1, PC2)) +
geom_point(aes(shape = Combined), size = I(2)) +
xlim(-18, 18) +
multivar.theme +
#scale_fill_manual(name = "Method and Treatment",
#                   labels = Combined,
#                  values = cols) +
scale_shape_manual(name = NULL,
values = c(16, 17, 1, 2),
labels = levels(Combined)) +
#guides(fill = guide_legend(override.aes = list(color = cols))) +
#theme(legend.position = "right", legend.box = "vertical") +
ylab(paste0("PC2 (",round(summary(all.pca)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(all.pca)$importance[2,1]*100, 2), "%)"))
ggsave("Comparison PCA bw.png", width = 5, height = 3.33, units = "in")
pca.correlations<-PC.cors(all.pca, as.data.frame(data.scaled), 2)
pca.correlations$PC1.r2 <- pca.correlations$PC1.corr.coefs^2
pca.correlations$PC2.r2 <- pca.correlations$PC2.corr.coefs^2
pca.correlations$PC1.p.corrected <- pca.correlations$PC1.p.values %>% p.adjust(method="fdr")
pca.correlations$PC2.p.corrected <- pca.correlations$PC2.p.values %>% p.adjust(method="fdr")
PC1.corr.sig <- pca.correlations %>% subset(PC1.p.corrected <= 0.05 & PC1.r2 >= 0.8,
select = c(.Variables, PC1.corr.coefs, PC1.r2,
PC1.p.corrected))
PC2.corr.sig <- pca.correlations %>% subset(PC2.p.corrected <= 0.05 & PC2.r2 >= 0.8,
select = c(.Variables, PC2.corr.coefs, PC2.r2,
PC2.p.corrected))
PC1.corr.sig[,-1] <- PC1.corr.sig[,-1] %>% signif(digits=3)
PC2.corr.sig[,-1] <- PC2.corr.sig[,-1] %>% signif(digits=3)
#get vapor pressures for these babies
left_join(PC1.corr.sig, library, by = c(".Variables" = "IA_Name")) %>% select(Compound = .Variables, PC1.corr.coefs, PC1.r2, PC1.p.corrected, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> PC1.corr.sig
pca.correlations<-PC.cors(all.pca, as.data.frame(data.scaled), 2)
pca.correlations$PC1.r2 <- pca.correlations$PC1.corr.coefs^2
pca.correlations$PC2.r2 <- pca.correlations$PC2.corr.coefs^2
pca.correlations$PC1.p.corrected <- pca.correlations$PC1.p.values %>% p.adjust(method="fdr")
pca.correlations$PC2.p.corrected <- pca.correlations$PC2.p.values %>% p.adjust(method="fdr")
PC1.corr.sig <- pca.correlations %>% subset(PC1.p.corrected <= 0.05 & PC1.r2 >= 0.8,
select = c(.Variables, PC1.corr.coefs, PC1.r2,
PC1.p.corrected))
PC2.corr.sig <- pca.correlations %>% subset(PC2.p.corrected <= 0.05 & PC2.r2 >= 0.8,
select = c(.Variables, PC2.corr.coefs, PC2.r2,
PC2.p.corrected))
PC1.corr.sig[,-1] <- PC1.corr.sig[,-1] %>% signif(digits=3)
PC2.corr.sig[,-1] <- PC2.corr.sig[,-1] %>% signif(digits=3)
#get vapor pressures for these babies
#left_join(PC1.corr.sig, library, by = c(".Variables" = "IA_Name")) %>% select(Compound = .Variables, PC1.corr.coefs, PC1.r2, PC1.p.corrected, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> PC1.corr.sig
PC1.corr.sig
arrange(PC1.corr.sig, PC1.corr.coefs)
left_join(PC2.corr.sig, library, by = c(".Variables" = "IA_Name")) %>% select(Compound = .Variables, PC2.corr.coefs, PC2.r2, PC2.p.corrected, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> PC2.corr.sig
pca.correlations<-PC.cors(all.pca, as.data.frame(data.scaled), 2)
pca.correlations$PC1.r2 <- pca.correlations$PC1.corr.coefs^2
pca.correlations$PC2.r2 <- pca.correlations$PC2.corr.coefs^2
pca.correlations$PC1.p.corrected <- pca.correlations$PC1.p.values %>% p.adjust(method="fdr")
pca.correlations$PC2.p.corrected <- pca.correlations$PC2.p.values %>% p.adjust(method="fdr")
PC1.corr.sig <- pca.correlations %>% subset(PC1.p.corrected <= 0.05 & PC1.r2 >= 0.8,
select = c(.Variables, PC1.corr.coefs, PC1.r2,
PC1.p.corrected))
PC2.corr.sig <- pca.correlations %>% subset(PC2.p.corrected <= 0.05 & PC2.r2 >= 0.8,
select = c(.Variables, PC2.corr.coefs, PC2.r2,
PC2.p.corrected))
PC1.corr.sig[,-1] <- PC1.corr.sig[,-1] %>% signif(digits=3)
PC2.corr.sig[,-1] <- PC2.corr.sig[,-1] %>% signif(digits=3)
#get vapor pressures for these babies
#left_join(PC1.corr.sig, library, by = c(".Variables" = "IA_Name")) %>% select(Compound = .Variables, PC1.corr.coefs, PC1.r2, PC1.p.corrected, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> PC1.corr.sig
PC1.corr.sig
arrange(PC1.corr.sig, PC1.corr.coefs)
#left_join(PC2.corr.sig, library, by = c(".Variables" = "IA_Name")) %>% select(Compound = .Variables, PC2.corr.coefs, PC2.r2, PC2.p.corrected, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> PC2.corr.sig
PC2.corr.sig
#write.xlsx(PC1.corr.sig, "PCA compounds DHS comparison.xlsx",
#           sheetName = "PC1", col.names = TRUE, row.names = FALSE)
#write.xlsx(PC2.corr.sig, "PCA compounds DHS comparison.xlsx",
#           sheetName = "PC2", col.names = TRUE, row.names = FALSE, append = TRUE)
PC1.corr.sig
arrange(PC1.corr.sig, PC1.corr.coefs)
PC2.corr.sig
arrange(PC2.corr.sig, PC2.corr.coefs)
arrange(PC1.corr.sig, PC1.corr.coefs)
arrange(PC2.corr.sig, PC2.corr.coefs)
important.PC1.data <- select(data, one_of(as.character(PC1.corr.sig$.Variables)))
sig.tests.PC1 <- vector(mode = "numeric", length = length(important.PC1.data))
for(i in 1:length(important.PC1.data)){
test <- t.test(important.PC1.data[[i]] ~ data$Method)
sig.tests.PC1[i] <- test$p.value
}
important.PC2.data <- select(data, one_of(as.character(PC2.corr.sig$.Variables)))
sig.tests.PC2 <- vector(mode = "numeric", length = length(important.PC2.data))
for(i in 1:length(important.PC2.data)){
test <- t.test(important.PC2.data[[i]] ~ data$Treatment)
sig.tests.PC2[i] <- test$p.value
}
df <- data.frame(treatment = Treatment, method = Method, PC1 = all.pca$x[ , 1], PC2 = all.pca$x[ , 2])
df
#interaction was non-significant
anova(lm(PC1 ~ treatment+method, data = df))
t.test(PC1 ~ method, data = df)
anova(lm(PC2 ~ treatment+method, data = df))
t.test(PC2 ~ treatment, data = df)
#setwd("/Users/scottericr/Google Drive/R Code/Twister Data")
library(reshape2)
library(tidyr)
library(dplyr)
library(venn)
library(ggplot2)
library(readr)
#library(xlsx)
source("~/Google Drive/R Code/myfunctions.R")
#input <- read_csv("DHS Comparison updated 4-7-2017.csv") #Nicole added back two compounds she previously removed as contaminants.  They're not actually contaminants.
input <- read_csv("DHS Comparison updated 6-4-2017.csv") #Nicole updated to remove some compounds that are plasticizers and others that are below a modified LOQ
input2 <- input[1:12, ]
#glimpse(input2)
input2[is.na(input2)] <- 0  #NA's represent 0's
#Read in annotated library for later extraction of LogKOW and vapor pressure
#library <- read_csv("annotated library mar 13 2017.csv")
#library <- read_csv("annotated library apr 6 2017.csv")
vars <- colsplit(input2$Treatment, "\\.", c("Method", "Treatment", "Rep"))
vars
len <- dim(input2)[2]
data <- cbind(vars$Method, vars$Treatment, input2[ , 2:len])
colnames(data)[1:2] <- c("Method","Treatment")
head(data)
#glimpse(data)
counts <- head(summarise_each(data, funs(n_distinct)))
rm <- which(counts <= 1)
if(length(rm) != 0){
data <- subset(data, select = -rm)}
#glimpse(data)
data %>% group_by(Method) %>% summarise_all(funs(mean)) -> compare.data
compare.data[ , -(1:2)] %>% t() %>% as.data.frame() -> compare.data
colnames(compare.data) <- c("DHS", "DCSE")
compare.data$Compound <- rownames(compare.data)
rownames(compare.data) <- NULL
##Venn Diagram
method.logical <- compare.data
method.logical$DHS[method.logical$DHS != 0] <- 1
method.logical$DCSE[method.logical$DCSE !=0] <- 1
venn(method.logical[ , 1:2], cexil = 1, cexsn = .85)
#Extract Unique Compounds
select(compare.data, Compound, everything()) %>% filter(DHS == 0 & DCSE != 0 | DHS !=0 & DCSE ==0) -> method_unique_compounds
#left_join(method_unique_compounds, library, by = c("Compound" = "IA_Name")) %>% select(Compound, DHS, DCSE, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> method_unique_compounds
method_unique_compounds
colSums(method.logical[ , 1:2])
data %>% group_by(Treatment) %>% summarise_all(funs(mean)) -> treatment.data
treatment.data[ , -(1:2)] %>% t() %>% as.data.frame() -> treatment.data
colnames(treatment.data) <- c("Control", "MeJA")
treatment.data$Compound <- rownames(treatment.data)
rownames(treatment.data) <- NULL
##Venn Diagram
treatment.logical <- treatment.data
treatment.logical$Control[treatment.logical$Control != 0] <- 1
treatment.logical$MeJA[treatment.logical$MeJA !=0] <- 1
venn(treatment.logical[ , 1:2], cexil = 1, cexsn = .85)
#Extract Unique Compounds
select(treatment.data, Compound, everything()) %>% filter(Control == 0 & MeJA != 0 | Control !=0 & MeJA ==0) -> treatment_unique_compounds
#left_join(treatment_unique_compounds, library, by = c("Compound" = "IA_Name")) %>% select(Compound, Control, MeJA, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> treatment_unique_compounds
treatment_unique_compounds
colSums(treatment.logical[ , 1:2])
data %>% group_by(Treatment, Method) %>% summarise_all(funs(mean)) -> combo.data
combo.data[ , -(1:2)] %>% t() %>% as.data.frame() -> combo.data1
colnames(combo.data1) <- paste(combo.data$Method, combo.data$Treatment, sep = ".")
combo.data1$Compound <- rownames(combo.data1)
rownames(combo.data1) <- NULL
##Venn Diagram
combo.logical <- combo.data1
combo.logical$DHS.Cont[combo.logical$DHS.Cont != 0] <- 1
combo.logical$DCSE.Cont[combo.logical$DCSE.Cont != 0] <- 1
combo.logical$DHS.MeJA[combo.logical$DHS.MeJA != 0] <- 1
combo.logical$DCSE.MeJA[combo.logical$DCSE.MeJA != 0] <- 1
venn(combo.logical[ , 1:4], cexil = 1, cexsn = .85)
colSums(combo.logical[ , 1:4])
#unique to MeJA/DCSE combo
combo.logical %>% filter(DCSE.MeJA == 1, DCSE.Cont == 0, DHS.Cont == 0, DHS.MeJA == 0)
#unique to MeJA/DHS combo
combo.logical %>% filter(DCSE.MeJA == 0, DCSE.Cont == 0, DHS.Cont == 0, DHS.MeJA == 1)
#xlsx package broken currently
#write.xlsx(method_unique_compounds, "unique compounds DHS comparison.xlsx",
#           sheetName = "By Method", row.names = FALSE)
#write.xlsx(treatment_unique_compounds, "unique compounds DHS comparison.xlsx",
#           sheetName = "By Treatment", row.names = FALSE, append = TRUE)
data.scaled <- scale(data[3:length(data)])
all.pca <- prcomp(data.scaled, scale. = FALSE, center = FALSE)
summary(all.pca)
#4 PCs to capture ~80% of variance
#screeplot(all.pca,type="l")
##my ggplot2 theme
multivar.theme <- theme_bw(base_size = 7, base_family = "Helvetica")+  #this changes the default text size and font
theme(axis.title = element_text(size = 7),                      #this sets a different font size for the axis labels
panel.border = element_rect(size = .5, color = "black"),   #change size= here to change border size
panel.grid.major = element_blank(),                     #these two lines make the grid lines go away
panel.grid.minor = element_blank(),
legend.text = element_text(size = 7),                  #legend font size
legend.background = element_rect(color = "black", size = 0.25),
legend.key.size = unit(.75, "lines"))
#legend.spacing = unit(.4, "lines"))         #changes horizontal spacing
Method <- data$Method
Treatment <- data$Treatment
levels(Treatment) <- c("Control", "MeJA")
Combined <- as.factor(paste(Method, Treatment))
#black and white with open vs. closed triangles and circles
#shape.labels = c("DCSE", "DHS")
#col.labels = c("Control", "MeJA")
cols <- c("Control" = "NA", "MeJA" = "black")
ggplot(as.data.frame(all.pca$x), aes(PC1, PC2)) +
geom_point(aes(shape = Combined), size = I(2)) +
xlim(-18, 18) +
multivar.theme +
#scale_fill_manual(name = "Method and Treatment",
#                   labels = Combined,
#                  values = cols) +
scale_shape_manual(name = NULL,
values = c(16, 17, 1, 2),
labels = levels(Combined)) +
#guides(fill = guide_legend(override.aes = list(color = cols))) +
#theme(legend.position = "right", legend.box = "vertical") +
ylab(paste0("PC2 (",round(summary(all.pca)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(all.pca)$importance[2,1]*100, 2), "%)"))
ggsave("Comparison PCA bw.png", width = 5, height = 3.33, units = "in")
ggplot(as.data.frame(all.pca$x), aes(PC1, PC2)) +
geom_point(aes(shape = Combined), size = I(2)) +
xlim(-18, 18) +
multivar.theme +
#scale_fill_manual(name = "Method and Treatment",
#                   labels = Combined,
#                  values = cols) +
scale_shape_manual(name = NULL,
values = c(16, 1, 17, 2),
labels = levels(Combined)) +
#guides(fill = guide_legend(override.aes = list(color = cols))) +
#theme(legend.position = "right", legend.box = "vertical") +
ylab(paste0("PC2 (",round(summary(all.pca)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(all.pca)$importance[2,1]*100, 2), "%)"))
ggplot(as.data.frame(all.pca$x), aes(PC1, PC2)) +
geom_point(aes(shape = Combined), size = I(2)) +
xlim(-18, 18) +
multivar.theme +
#scale_fill_manual(name = "Method and Treatment",
#                   labels = Combined,
#                  values = cols) +
scale_shape_manual(name = NULL,
values = c(1, 16, 2, 17),
labels = levels(Combined)) +
#guides(fill = guide_legend(override.aes = list(color = cols))) +
#theme(legend.position = "right", legend.box = "vertical") +
ylab(paste0("PC2 (",round(summary(all.pca)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(all.pca)$importance[2,1]*100, 2), "%)"))
ggplot(as.data.frame(all.pca$x), aes(PC1, PC2)) +
geom_point(aes(shape = Combined), size = I(2)) +
xlim(-18, 18) +
multivar.theme +
#scale_fill_manual(name = "Method and Treatment",
#                   labels = Combined,
#                  values = cols) +
scale_shape_manual(name = NULL,
values = c(1, 16, 2, 17),
labels = levels(Combined)) +
#guides(fill = guide_legend(override.aes = list(color = cols))) +
#theme(legend.position = "right", legend.box = "vertical") +
ylab(paste0("PC2 (",round(summary(all.pca)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(all.pca)$importance[2,1]*100, 2), "%)"))
ggsave("Comparison PCA bw2.png", width = 5, height = 3.33, units = "in")
pca.correlations<-PC.cors(all.pca, as.data.frame(data.scaled), 2)
pca.correlations$PC1.r2 <- pca.correlations$PC1.corr.coefs^2
pca.correlations$PC2.r2 <- pca.correlations$PC2.corr.coefs^2
pca.correlations$PC1.p.corrected <- pca.correlations$PC1.p.values %>% p.adjust(method="fdr")
pca.correlations$PC2.p.corrected <- pca.correlations$PC2.p.values %>% p.adjust(method="fdr")
PC1.corr.sig <- pca.correlations %>% subset(PC1.p.corrected <= 0.05 & PC1.r2 >= 0.8,
select = c(.Variables, PC1.corr.coefs, PC1.r2,
PC1.p.corrected))
PC2.corr.sig <- pca.correlations %>% subset(PC2.p.corrected <= 0.05 & PC2.r2 >= 0.8,
select = c(.Variables, PC2.corr.coefs, PC2.r2,
PC2.p.corrected))
PC1.corr.sig[,-1] <- PC1.corr.sig[,-1] %>% signif(digits=3)
PC2.corr.sig[,-1] <- PC2.corr.sig[,-1] %>% signif(digits=3)
#get vapor pressures for these babies
#left_join(PC1.corr.sig, library, by = c(".Variables" = "IA_Name")) %>% select(Compound = .Variables, PC1.corr.coefs, PC1.r2, PC1.p.corrected, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> PC1.corr.sig
arrange(PC1.corr.sig, PC1.corr.coefs)
#left_join(PC2.corr.sig, library, by = c(".Variables" = "IA_Name")) %>% select(Compound = .Variables, PC2.corr.coefs, PC2.r2, PC2.p.corrected, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> PC2.corr.sig
arrange(PC2.corr.sig, PC2.corr.coefs)
#write.xlsx(PC1.corr.sig, "PCA compounds DHS comparison.xlsx",
#           sheetName = "PC1", col.names = TRUE, row.names = FALSE)
#write.xlsx(PC2.corr.sig, "PCA compounds DHS comparison.xlsx",
#           sheetName = "PC2", col.names = TRUE, row.names = FALSE, append = TRUE)
write.xlsx(PC1.corr.sig, "PCA compounds DHS comparison.xlsx",
sheetName = "PC1", col.names = TRUE, row.names = FALSE)
library(xlsx)
install.packages("rjava")
library(xlsx)
install.packages("rJava")
library(xlsx)
library(rJava)
write.csv(PC1.corr.sig, "PC1 compounds DHS comparison.csv")
write.csv(PC2.corr.sig, "PC2 compounds DHS comparison.csv")
setwd("~/Google Drive/R Code/Twister Data")
#setwd("/Users/escott03/Google Drive/R Code/Twister Data")
library(reshape2)
library(dplyr)
library(ggplot2)
library(readr)
#library(xlsx)
library(readxl)
library(car)
#library(scales)
#library(MASS)
library(RColorBrewer)
library(venn)
source("~/Google Drive/R Code/myfunctions.R")
#twister <- read_csv("Field.csv")
twister <- read_excel("Field2.xlsx", sheet = 3)
twister1 <- twister[1:149, 1:12]
twister1[is.na(twister1)] = 0 #missing cells represent undetected compounds
twist2 = recast(twister1, variable ~ Compound, measure.var = c(2:12)) #this transposes the data so each column is a compound, but it re-orders the columns, which I don't like.
twist2
colnames(twist2)[1] <- "samples"
#glimpse(twist2)
summary(twist2$samples)
Treatment<-c(rep("E. obliqua",3),rep("MeJA",4),rep("control",4))
dim(twist2)-1 #149
x <- transmute(twister1, Control = con1 + con2 + con3 + con4,
MeJA = meja1 + meja2 + meja3 + meja4,
Geometrid = geo1 + geo2 + geo3)
x[x > 0] = 1
x$Compound <- twister1$Compound
x <- dplyr::select(x, Compound, everything())
venn(x[ , -1], cexil=1.5, cexsn=1.1)
colSums(x[ , -1])
#unique to Geometrid:
Geometrid.unique <- subset(x, x$Geometrid != 0 & x$MeJA == 0 & x$Control == 0)
Geometrid.unique
#unique to MeJA:
MeJA.unique <- subset(x, x$MeJA != 0 & x$Geometrid == 0 & x$Control == 0)
MeJA.unique
#unique to Control
Control.unique <- subset(x, x$Control != 0 & x$Geometrid == 0 & x$MeJA == 0)
Control.unique
tea.pca2<-prcomp(twist2[ , -1], scale. = TRUE, center = TRUE)
summary(tea.pca2)
#head(tea.pca2$rotation)
#screeplot(tea.pca2, type="lines")
##my ggplot2 theme
multivar.theme <- theme_bw(base_size = 7, base_family = "Helvetica")+  #this changes the default text size and font
theme(axis.title = element_text(size = 7),                      #this sets a different font size for the axis labels
panel.border = element_rect(size = .5, color = "black"),   #change size= here to change border size
panel.grid.major = element_blank(),                     #these two lines make the grid lines go away
panel.grid.minor = element_blank(),
legend.text = element_text(size = 7),                  #legend font size
legend.background = element_rect(color = "black", size = 0.25),
legend.key.size = unit(.75, "lines"))                    #spacing between text
#legend.spacing = unit(.4, "lines"))                     #spacing between legends if > 1
####Plotting PCA####
#Treatment
labels = expression("Control", italic("E. obliqua"), "MeJA")
cols <- c("control" = "#1b9e77", "MeJA" = "#d95f02", "E. obliqua" = "#7570b3")
#PC1 vs PC2
ggplot(as.data.frame(tea.pca2$x), aes(PC1, PC2, fill = Treatment)) +
geom_point(shape = 21, size = I(2)) +
scale_fill_manual(name = NULL, values = cols, labels = labels) +
multivar.theme +
theme(legend.position = "bottom") +
ylab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(tea.pca2)$importance[2,1]*100, 2), "%)"))
ggsave("Field Trial.png", height = 3.5, width = 3.33, units = "in")
#PC2 vs PC3
#ggplot(as.data.frame(tea.pca2$x), aes(PC2, PC3, fill = Treatment)) +
#  geom_point(shape = 24, size = I(3)) +
#  scale_fill_manual(values = cols, labels = labels) +
#  multivar.theme +
#  theme(
#    legend.position = "right",
#  #legend.position=c(0.13,0.16), #puts it in the lower left
#    legend.text = element_text(size = 10),
#    legend.background = element_rect(color = "black")) +
#  ylab(paste0("PC3 (",round(summary(tea.pca2)$importance[2,3]*100, 2), "%)")) +
#  xlab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)"))
#ggsave("Field Trial2vs3.png", height = 3.5, width = 5, units = "in")
#black and white
ggplot(as.data.frame(tea.pca2$x), aes(PC1, PC2, shape = Treatment)) +
geom_point(size = I(2)) +
scale_shape_manual(name = NULL, values = c(16, 18, 17), labels = labels) +
multivar.theme +
#theme(legend.position = "bottom") +
ylab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(tea.pca2)$importance[2,1]*100, 2), "%)"))
ggsave("Field Trial bw.png", height = 3.33, width = 5, units = "in")
ggplot(as.data.frame(tea.pca2$x), aes(PC1, PC2, shape = Treatment)) +
geom_point(size = I(2)) +
scale_shape_manual(name = NULL, values = c(1, 10, 16), labels = labels) +
multivar.theme +
#theme(legend.position = "bottom") +
ylab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(tea.pca2)$importance[2,1]*100, 2), "%)"))
ggplot(as.data.frame(tea.pca2$x), aes(PC1, PC2, shape = Treatment)) +
geom_point(size = I(2)) +
scale_shape_manual(name = NULL, values = c(1, 10, 16), labels = labels) +
multivar.theme +
#theme(legend.position = "bottom") +
ylab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(tea.pca2)$importance[2,1]*100, 2), "%)"))
ggsave("Field Trial bw2.png", height = 3.33, width = 5, units = "in")
ggplot(as.data.frame(tea.pca2$x), aes(PC1, PC2, shape = Treatment)) +
geom_point(size = I(2)) +
scale_shape_manual(name = NULL, values = c(1, 10, 16), labels = labels) +
multivar.theme +
#theme(legend.position = "bottom") +
ylab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(tea.pca2)$importance[2,1]*100, 2), "%)"))
ggplot(as.data.frame(tea.pca2$x), aes(PC1, PC2, fill = Treatment)) +
geom_point(size = I(2), shape = 21) +
scale_fill_manual(name = NULL, values = c(1, 10, 16), labels = labels) +
multivar.theme +
#theme(legend.position = "bottom") +
ylab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(tea.pca2)$importance[2,1]*100, 2), "%)"))
ggplot(as.data.frame(tea.pca2$x), aes(PC1, PC2, shape = Treatment)) +
geom_point(size = I(2)) +
scale_shape_manual(name = NULL, values = c(1, 10, 16), labels = labels) +
multivar.theme +
#theme(legend.position = "bottom") +
ylab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(tea.pca2)$importance[2,1]*100, 2), "%)"))
ggplot(as.data.frame(tea.pca2$x), aes(PC1, PC2, fill = Treatment)) +
geom_point(size = I(2), shape = 21) +
scale_fill_manual(name = NULL, values = c("white", "grey", "black"), labels = labels) +
multivar.theme +
#theme(legend.position = "bottom") +
ylab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(tea.pca2)$importance[2,1]*100, 2), "%)"))
ggplot(as.data.frame(tea.pca2$x), aes(PC1, PC2, fill = Treatment)) +
geom_point(size = I(2), shape = 21) +
scale_fill_manual(name = NULL, values = c("white", "grey", "black"), labels = labels) +
multivar.theme +
#theme(legend.position = "bottom") +
ylab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(tea.pca2)$importance[2,1]*100, 2), "%)"))
ggsave("Field Trial bw3.png", height = 3.33, width = 5, units = "in")
