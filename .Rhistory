#  xlab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)"))
#ggsave("Field Trial2vs3.png", height = 3.5, width = 5, units = "in")
##my ggplot2 theme
multivar.theme <- theme_bw(base_size = 7, base_family = "Helvetica")+  #this changes the default text size and font
theme(axis.title = element_text(size = 7),                      #this sets a different font size for the axis labels
panel.border = element_rect(size = .5, color = "black"),   #change size= here to change border size
panel.grid.major = element_blank(),                     #these two lines make the grid lines go away
panel.grid.minor = element_blank(),
legend.text = element_text(size = 7),                  #legend font size
legend.background = element_rect(color = "black", size = 0.25),
legend.key.size = unit(.5, "lines"),                    #spacing between text
legend.spacing = unit(.4, "lines"))                     #spacing between legends if > 1
####Plotting PCA####
#Treatment
labels = expression("Control", italic("E. obliqua"), "MeJA")
cols <- c("control" = "#1b9e77", "MeJA" = "#d95f02", "E. obliqua" = "#7570b3")
#PC1 vs PC2
ggplot(as.data.frame(tea.pca2$x), aes(PC1, PC2, fill = Treatment)) +
geom_point(shape = 21, size = I(2)) +
scale_fill_manual(name = NULL, values = cols, labels = labels) +
multivar.theme +
theme(legend.position = "bottom") +
ylab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(tea.pca2)$importance[2,1]*100, 2), "%)"))
ggsave("Field Trial.pdf", height = 3.5, width = 3.33, units = "in")
#PC2 vs PC3
#ggplot(as.data.frame(tea.pca2$x), aes(PC2, PC3, fill = Treatment)) +
#  geom_point(shape = 24, size = I(3)) +
#  scale_fill_manual(values = cols, labels = labels) +
#  multivar.theme +
#  theme(
#    legend.position = "right",
#  #legend.position=c(0.13,0.16), #puts it in the lower left
#    legend.text = element_text(size = 10),
#    legend.background = element_rect(color = "black")) +
#  ylab(paste0("PC3 (",round(summary(tea.pca2)$importance[2,3]*100, 2), "%)")) +
#  xlab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)"))
#ggsave("Field Trial2vs3.png", height = 3.5, width = 5, units = "in")
##my ggplot2 theme
multivar.theme <- theme_bw(base_size = 7, base_family = "Helvetica")+  #this changes the default text size and font
theme(axis.title = element_text(size = 7),                      #this sets a different font size for the axis labels
panel.border = element_rect(size = .5, color = "black"),   #change size= here to change border size
panel.grid.major = element_blank(),                     #these two lines make the grid lines go away
panel.grid.minor = element_blank(),
legend.text = element_text(size = 7),                  #legend font size
legend.background = element_rect(color = "black", size = 0.25),
legend.key.size = unit(.7, "lines"),                    #spacing between text
legend.spacing = unit(.4, "lines"))                     #spacing between legends if > 1
####Plotting PCA####
#Treatment
labels = expression("Control", italic("E. obliqua"), "MeJA")
cols <- c("control" = "#1b9e77", "MeJA" = "#d95f02", "E. obliqua" = "#7570b3")
#PC1 vs PC2
ggplot(as.data.frame(tea.pca2$x), aes(PC1, PC2, fill = Treatment)) +
geom_point(shape = 21, size = I(2)) +
scale_fill_manual(name = NULL, values = cols, labels = labels) +
multivar.theme +
theme(legend.position = "bottom") +
ylab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(tea.pca2)$importance[2,1]*100, 2), "%)"))
ggsave("Field Trial.pdf", height = 3.5, width = 3.33, units = "in")
#PC2 vs PC3
#ggplot(as.data.frame(tea.pca2$x), aes(PC2, PC3, fill = Treatment)) +
#  geom_point(shape = 24, size = I(3)) +
#  scale_fill_manual(values = cols, labels = labels) +
#  multivar.theme +
#  theme(
#    legend.position = "right",
#  #legend.position=c(0.13,0.16), #puts it in the lower left
#    legend.text = element_text(size = 10),
#    legend.background = element_rect(color = "black")) +
#  ylab(paste0("PC3 (",round(summary(tea.pca2)$importance[2,3]*100, 2), "%)")) +
#  xlab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)"))
#ggsave("Field Trial2vs3.png", height = 3.5, width = 5, units = "in")
##my ggplot2 theme
multivar.theme <- theme_bw(base_size = 7, base_family = "Helvetica")+  #this changes the default text size and font
theme(axis.title = element_text(size = 7),                      #this sets a different font size for the axis labels
panel.border = element_rect(size = .5, color = "black"),   #change size= here to change border size
panel.grid.major = element_blank(),                     #these two lines make the grid lines go away
panel.grid.minor = element_blank(),
legend.text = element_text(size = 7),                  #legend font size
legend.background = element_rect(color = "black", size = 0.25),
legend.key.size = unit(1.5, "lines"),                    #spacing between text
legend.spacing = unit(.4, "lines"))                     #spacing between legends if > 1
####Plotting PCA####
#Treatment
labels = expression("Control", italic("E. obliqua"), "MeJA")
cols <- c("control" = "#1b9e77", "MeJA" = "#d95f02", "E. obliqua" = "#7570b3")
#PC1 vs PC2
ggplot(as.data.frame(tea.pca2$x), aes(PC1, PC2, fill = Treatment)) +
geom_point(shape = 21, size = I(2)) +
scale_fill_manual(name = NULL, values = cols, labels = labels) +
multivar.theme +
theme(legend.position = "bottom") +
ylab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(tea.pca2)$importance[2,1]*100, 2), "%)"))
ggsave("Field Trial.pdf", height = 3.5, width = 3.33, units = "in")
#PC2 vs PC3
#ggplot(as.data.frame(tea.pca2$x), aes(PC2, PC3, fill = Treatment)) +
#  geom_point(shape = 24, size = I(3)) +
#  scale_fill_manual(values = cols, labels = labels) +
#  multivar.theme +
#  theme(
#    legend.position = "right",
#  #legend.position=c(0.13,0.16), #puts it in the lower left
#    legend.text = element_text(size = 10),
#    legend.background = element_rect(color = "black")) +
#  ylab(paste0("PC3 (",round(summary(tea.pca2)$importance[2,3]*100, 2), "%)")) +
#  xlab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)"))
#ggsave("Field Trial2vs3.png", height = 3.5, width = 5, units = "in")
##my ggplot2 theme
multivar.theme <- theme_bw(base_size = 7, base_family = "Helvetica")+  #this changes the default text size and font
theme(axis.title = element_text(size = 7),                      #this sets a different font size for the axis labels
panel.border = element_rect(size = .5, color = "black"),   #change size= here to change border size
panel.grid.major = element_blank(),                     #these two lines make the grid lines go away
panel.grid.minor = element_blank(),
legend.text = element_text(size = 7),                  #legend font size
legend.background = element_rect(color = "black", size = 0.25),
legend.key.size = unit(.7, "lines"),                    #spacing between text
legend.spacing = unit(.4, "lines"))                     #spacing between legends if > 1
####Plotting PCA####
#Treatment
labels = expression("Control", italic("E. obliqua"), "MeJA")
cols <- c("control" = "#1b9e77", "MeJA" = "#d95f02", "E. obliqua" = "#7570b3")
#PC1 vs PC2
ggplot(as.data.frame(tea.pca2$x), aes(PC1, PC2, fill = Treatment)) +
geom_point(shape = 21, size = I(2)) +
scale_fill_manual(name = NULL, values = cols, labels = labels) +
multivar.theme +
theme(legend.position = "bottom") +
ylab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(tea.pca2)$importance[2,1]*100, 2), "%)"))
ggsave("Field Trial.pdf", height = 3.5, width = 3.33, units = "in")
#PC2 vs PC3
#ggplot(as.data.frame(tea.pca2$x), aes(PC2, PC3, fill = Treatment)) +
#  geom_point(shape = 24, size = I(3)) +
#  scale_fill_manual(values = cols, labels = labels) +
#  multivar.theme +
#  theme(
#    legend.position = "right",
#  #legend.position=c(0.13,0.16), #puts it in the lower left
#    legend.text = element_text(size = 10),
#    legend.background = element_rect(color = "black")) +
#  ylab(paste0("PC3 (",round(summary(tea.pca2)$importance[2,3]*100, 2), "%)")) +
#  xlab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)"))
#ggsave("Field Trial2vs3.png", height = 3.5, width = 5, units = "in")
####Plotting PCA####
#Treatment
labels = expression("Control", italic("E. obliqua"), "MeJA")
cols <- c("control" = "#1b9e77", "MeJA" = "#d95f02", "E. obliqua" = "#7570b3")
#PC1 vs PC2
ggplot(as.data.frame(tea.pca2$x), aes(PC1, PC2, fill = Treatment)) +
geom_point(shape = 21, size = I(2)) +
scale_fill_manual(name = NULL, values = cols, labels = labels) +
multivar.theme +
theme(legend.position = "bottom") +
ylab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(tea.pca2)$importance[2,1]*100, 2), "%)"))
ggsave("Field Trial.png", height = 3.5, width = 3.33, units = "in")
#PC2 vs PC3
#ggplot(as.data.frame(tea.pca2$x), aes(PC2, PC3, fill = Treatment)) +
#  geom_point(shape = 24, size = I(3)) +
#  scale_fill_manual(values = cols, labels = labels) +
#  multivar.theme +
#  theme(
#    legend.position = "right",
#  #legend.position=c(0.13,0.16), #puts it in the lower left
#    legend.text = element_text(size = 10),
#    legend.background = element_rect(color = "black")) +
#  ylab(paste0("PC3 (",round(summary(tea.pca2)$importance[2,3]*100, 2), "%)")) +
#  xlab(paste0("PC2 (",round(summary(tea.pca2)$importance[2,2]*100, 2), "%)"))
#ggsave("Field Trial2vs3.png", height = 3.5, width = 5, units = "in")
##my ggplot2 theme
multivar.theme <- theme_bw(base_size = 7, base_family = "Helvetica")+  #this changes the default text size and font
theme(axis.title = element_text(size = 7),                      #this sets a different font size for the axis labels
panel.border = element_rect(size = .5, color = "black"),   #change size= here to change border size
panel.grid.major = element_blank(),                     #these two lines make the grid lines go away
panel.grid.minor = element_blank(),
legend.text = element_text(size = 7),                  #legend font size
legend.background = element_rect(color = "black", size = 0.25),
legend.key.size = unit(.4, "lines"),
legend.spacing = unit(.4, "lines"))         #changes horizontal spacing
data.scaled <- scale(data[3:length(data)])
all.pca <- prcomp(data.scaled, scale. = FALSE, center = FALSE)
summary(all.pca)
#4 PCs to capture ~80% of variance
#screeplot(all.pca,type="l")
input <- read_csv("DHS Comparison updated 4-7-2017.csv") #Nicole added back two compounds she previously removed as contaminants.  They're not actually contaminants.
input2 <- input[1:12, ]
#glimpse(input2)
input2[is.na(input2)] <- 0  #NA's represent 0's
#Read in annotated library for later extraction of LogKOW and vapor pressure
#library <- read_csv("annotated library mar 13 2017.csv")
library <- read_csv("annotated library apr 6 2017.csv")
vars <- colsplit(input2$Treatment, "\\.", c("Method", "Treatment", "Rep"))
vars
len <- dim(input2)[2]
data <- cbind(vars$Method, vars$Treatment, input2[ , 2:len])
colnames(data)[1:2] <- c("Method","Treatment")
head(data)
#glimpse(data)
counts <- head(summarise_each(data, funs(n_distinct)))
rm <- which(counts <= 1)
rm
#REMINDER TO INSERT IF STATEMENT SO IT DOESN"T RUN IF RM IS LENGHT 0"
data <- subset(data, select = -rm)
#glimpse(data)
data %>% group_by(Method) %>% summarise_all(funs(mean)) -> compare.data
#setwd("/Users/scottericr/Google Drive/R Code/Twister Data")
library(reshape2)
library(tidyr)
library(dplyr)
library(venn)
library(ggplot2)
library(readr)
library(xlsx)
source("~/Google Drive/R Code/myfunctions.R")
input <- read_csv("DHS Comparison updated 4-7-2017.csv") #Nicole added back two compounds she previously removed as contaminants.  They're not actually contaminants.
input2 <- input[1:12, ]
#glimpse(input2)
input2[is.na(input2)] <- 0  #NA's represent 0's
#Read in annotated library for later extraction of LogKOW and vapor pressure
#library <- read_csv("annotated library mar 13 2017.csv")
library <- read_csv("annotated library apr 6 2017.csv")
vars <- colsplit(input2$Treatment, "\\.", c("Method", "Treatment", "Rep"))
vars
len <- dim(input2)[2]
data <- cbind(vars$Method, vars$Treatment, input2[ , 2:len])
colnames(data)[1:2] <- c("Method","Treatment")
head(data)
#glimpse(data)
counts <- head(summarise_each(data, funs(n_distinct)))
rm <- which(counts <= 1)
rm
#REMINDER TO INSERT IF STATEMENT SO IT DOESN"T RUN IF RM IS LENGHT 0"
data <- subset(data, select = -rm)
#glimpse(data)
data %>% group_by(Method) %>% summarise_all(funs(mean)) -> compare.data
input <- read_csv("DHS Comparison updated 4-7-2017.csv") #Nicole added back two compounds she previously removed as contaminants.  They're not actually contaminants.
input2 <- input[1:12, ]
#glimpse(input2)
input2[is.na(input2)] <- 0  #NA's represent 0's
#Read in annotated library for later extraction of LogKOW and vapor pressure
#library <- read_csv("annotated library mar 13 2017.csv")
library <- read_csv("annotated library apr 6 2017.csv")
vars <- colsplit(input2$Treatment, "\\.", c("Method", "Treatment", "Rep"))
vars
len <- dim(input2)[2]
data <- cbind(vars$Method, vars$Treatment, input2[ , 2:len])
colnames(data)[1:2] <- c("Method","Treatment")
head(data)
#glimpse(data)
data %>% group_by(Method) %>% summarise_all(funs(mean)) -> compare.data
compare.data[ , -(1:2)] %>% t() %>% as.data.frame() -> compare.data
colnames(compare.data) <- c("DHS", "DCSE")
compare.data$Compound <- rownames(compare.data)
rownames(compare.data) <- NULL
##Venn Diagram
method.logical <- compare.data
method.logical$DHS[method.logical$DHS != 0] <- 1
method.logical$DCSE[method.logical$DCSE !=0] <- 1
venn(method.logical[ , 1:2], cexil = 1, cexsn = .85)
#Extract Unique Compounds
select(compare.data, Compound, everything()) %>% filter(DHS == 0 & DCSE != 0 | DHS !=0 & DCSE ==0) -> method_unique_compounds
left_join(method_unique_compounds, library, by = c("Compound" = "IA_Name")) %>% select(Compound, DHS, DCSE, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> method_unique_compounds
method_unique_compounds
dim(method.logical)
colSums(method.logical[ , 1:2])
colSums(method.logical[ , 1:2])
data %>% group_by(Treatment) %>% summarise_all(funs(mean)) -> treatment.data
treatment.data[ , -(1:2)] %>% t() %>% as.data.frame() -> treatment.data
colnames(treatment.data) <- c("Control", "MeJA")
treatment.data$Compound <- rownames(treatment.data)
rownames(treatment.data) <- NULL
##Venn Diagram
treatment.logical <- treatment.data
treatment.logical$Control[treatment.logical$Control != 0] <- 1
treatment.logical$MeJA[treatment.logical$MeJA !=0] <- 1
venn(treatment.logical[ , 1:2], cexil = 1, cexsn = .85)
#Extract Unique Compounds
select(treatment.data, Compound, everything()) %>% filter(Control == 0 & MeJA != 0 | Control !=0 & MeJA ==0) -> treatment_unique_compounds
left_join(treatment_unique_compounds, library, by = c("Compound" = "IA_Name")) %>% select(Compound, Control, MeJA, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> treatment_unique_compounds
treatment_unique_compounds
colSums(treatment.logical[ , 1:2])
data %>% group_by(Treatment, Method) %>% summarise_all(funs(mean)) -> combo.data
combo.data[ , -(1:2)] %>% t() %>% as.data.frame() -> combo.data1
colnames(combo.data1) <- paste(combo.data$Method, combo.data$Treatment, sep = ".")
combo.data1$Compound <- rownames(combo.data1)
rownames(combo.data1) <- NULL
##Venn Diagram
combo.logical <- combo.data1
combo.logical$DHS.Cont[combo.logical$DHS.Cont != 0] <- 1
combo.logical$DCSE.Cont[combo.logical$DCSE.Cont != 0] <- 1
combo.logical$DHS.MeJA[combo.logical$DHS.MeJA != 0] <- 1
combo.logical$DCSE.MeJA[combo.logical$DCSE.MeJA != 0] <- 1
venn(combo.logical[ , 1:4], cexil = 1, cexsn = .85)
colSums(combo.logical[ , 1:4])
#unique to MeJA/DCSE combo
combo.logical %>% filter(DCSE.MeJA == 1, DCSE.Cont == 0, DHS.Cont == 0, DHS.MeJA == 0)
#unique to MeJA/DHS combo
combo.logical %>% filter(DCSE.MeJA == 0, DCSE.Cont == 0, DHS.Cont == 0, DHS.MeJA == 1)
write.xlsx(method_unique_compounds, "unique compounds DHS comparison.xlsx",
sheetName = "By Method", row.names = FALSE)
write.xlsx(treatment_unique_compounds, "unique compounds DHS comparison.xlsx",
sheetName = "By Treatment", row.names = FALSE, append = TRUE)
data.scaled <- scale(data[3:length(data)])
all.pca <- prcomp(data.scaled, scale. = FALSE, center = FALSE)
summary(all.pca)
#4 PCs to capture ~80% of variance
#screeplot(all.pca,type="l")
##my ggplot2 theme
multivar.theme <- theme_bw(base_size = 7, base_family = "Helvetica")+  #this changes the default text size and font
theme(axis.title = element_text(size = 7),                      #this sets a different font size for the axis labels
panel.border = element_rect(size = .5, color = "black"),   #change size= here to change border size
panel.grid.major = element_blank(),                     #these two lines make the grid lines go away
panel.grid.minor = element_blank(),
legend.text = element_text(size = 7),                  #legend font size
legend.background = element_rect(color = "black", size = 0.25),
legend.key.size = unit(.4, "lines"),
legend.spacing = unit(.4, "lines"))         #changes horizontal spacing
Method <- data$Method
Treatment <- data$Treatment
shape.labels = c("DCSE", "DHS")
col.labels = c("Control", "MeJA")
cols <- c("Cont" = "#1b9e77", "MeJA" = "#d95f02")
ggplot(as.data.frame(all.pca$x), aes(PC1, PC2)) +
geom_point(aes(fill = Treatment, shape = Method), size = I(2)) +
xlim(-18, 18) +
multivar.theme +
scale_shape_manual(name = "Method:",
values = c(21, 24),
labels = shape.labels) +
scale_fill_manual(name = "Treatment:",
values = cols,
labels = col.labels) +
guides(fill = guide_legend(override.aes = list(color = cols))) +
theme(legend.position = "bottom", legend.box = "horizontal") +
ylab(paste0("PC2 (",round(summary(all.pca)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(all.pca)$importance[2,1]*100, 2), "%)"))
ggsave("Comparison PCA.pdf", width = 3.33, height = 3.5, units = "in")
Method <- data$Method
Treatment <- data$Treatment
shape.labels = c("DCSE", "DHS")
col.labels = c("Control", "MeJA")
cols <- c("Cont" = "#1b9e77", "MeJA" = "#d95f02")
ggplot(as.data.frame(all.pca$x), aes(PC1, PC2)) +
geom_point(aes(fill = Treatment, shape = Method), size = I(2)) +
xlim(-18, 18) +
multivar.theme +
scale_shape_manual(name = "Method:",
values = c(21, 24),
labels = shape.labels) +
scale_fill_manual(name = "Treatment:",
values = cols,
labels = col.labels) +
guides(fill = guide_legend(override.aes = list(color = cols))) +
theme(legend.position = "bottom", legend.box = "horizontal") +
ylab(paste0("PC2 (",round(summary(all.pca)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(all.pca)$importance[2,1]*100, 2), "%)"))
ggsave("Comparison PCA.png", width = 3.33, height = 3.5, units = "in")
#setwd("/Users/scottericr/Google Drive/R Code/Twister Data")
library(reshape2)
library(tidyr)
library(dplyr)
library(venn)
library(ggplot2)
library(readr)
library(xlsx)
source("~/Google Drive/R Code/myfunctions.R")
input <- read_csv("DHS Comparison updated 4-7-2017.csv") #Nicole added back two compounds she previously removed as contaminants.  They're not actually contaminants.
input2 <- input[1:12, ]
#glimpse(input2)
input2[is.na(input2)] <- 0  #NA's represent 0's
#Read in annotated library for later extraction of LogKOW and vapor pressure
#library <- read_csv("annotated library mar 13 2017.csv")
library <- read_csv("annotated library apr 6 2017.csv")
input <- read_csv("DHS Comparison updated 4-7-2017.csv") #Nicole added back two compounds she previously removed as contaminants.  They're not actually contaminants.
input2 <- input[1:12, ]
#glimpse(input2)
input2[is.na(input2)] <- 0  #NA's represent 0's
#Read in annotated library for later extraction of LogKOW and vapor pressure
#library <- read_csv("annotated library mar 13 2017.csv")
library <- read_csv("annotated library apr 6 2017.csv")
vars <- colsplit(input2$Treatment, "\\.", c("Method", "Treatment", "Rep"))
vars
len <- dim(input2)[2]
data <- cbind(vars$Method, vars$Treatment, input2[ , 2:len])
colnames(data)[1:2] <- c("Method","Treatment")
head(data)
#glimpse(data)
counts <- head(summarise_each(data, funs(n_distinct)))
rm <- which(counts <= 1)
rm
counts <- head(summarise_each(data, funs(n_distinct)))
rm <- which(counts <= 1)
rm
#REMINDER TO INSERT IF STATEMENT SO IT DOESN"T RUN IF RM IS LENGHT 0"
if(length(rm) != 0){
data <- subset(data, select = -rm)}
#glimpse(data)
data
data %>% group_by(Method) %>% summarise_all(funs(mean)) -> compare.data
compare.data[ , -(1:2)] %>% t() %>% as.data.frame() -> compare.data
colnames(compare.data) <- c("DHS", "DCSE")
compare.data$Compound <- rownames(compare.data)
rownames(compare.data) <- NULL
##Venn Diagram
method.logical <- compare.data
method.logical$DHS[method.logical$DHS != 0] <- 1
method.logical$DCSE[method.logical$DCSE !=0] <- 1
venn(method.logical[ , 1:2], cexil = 1, cexsn = .85)
#Extract Unique Compounds
select(compare.data, Compound, everything()) %>% filter(DHS == 0 & DCSE != 0 | DHS !=0 & DCSE ==0) -> method_unique_compounds
left_join(method_unique_compounds, library, by = c("Compound" = "IA_Name")) %>% select(Compound, DHS, DCSE, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> method_unique_compounds
method_unique_compounds
dim(method.logical)
colSums(method.logical[ , 1:2])
colSums(method.logical[ , 1:2])
data %>% group_by(Treatment) %>% summarise_all(funs(mean)) -> treatment.data
treatment.data[ , -(1:2)] %>% t() %>% as.data.frame() -> treatment.data
colnames(treatment.data) <- c("Control", "MeJA")
treatment.data$Compound <- rownames(treatment.data)
rownames(treatment.data) <- NULL
##Venn Diagram
treatment.logical <- treatment.data
treatment.logical$Control[treatment.logical$Control != 0] <- 1
treatment.logical$MeJA[treatment.logical$MeJA !=0] <- 1
venn(treatment.logical[ , 1:2], cexil = 1, cexsn = .85)
#Extract Unique Compounds
select(treatment.data, Compound, everything()) %>% filter(Control == 0 & MeJA != 0 | Control !=0 & MeJA ==0) -> treatment_unique_compounds
left_join(treatment_unique_compounds, library, by = c("Compound" = "IA_Name")) %>% select(Compound, Control, MeJA, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> treatment_unique_compounds
treatment_unique_compounds
colSums(treatment.logical[ , 1:2])
data %>% group_by(Treatment, Method) %>% summarise_all(funs(mean)) -> combo.data
combo.data[ , -(1:2)] %>% t() %>% as.data.frame() -> combo.data1
colnames(combo.data1) <- paste(combo.data$Method, combo.data$Treatment, sep = ".")
combo.data1$Compound <- rownames(combo.data1)
rownames(combo.data1) <- NULL
##Venn Diagram
combo.logical <- combo.data1
combo.logical$DHS.Cont[combo.logical$DHS.Cont != 0] <- 1
combo.logical$DCSE.Cont[combo.logical$DCSE.Cont != 0] <- 1
combo.logical$DHS.MeJA[combo.logical$DHS.MeJA != 0] <- 1
combo.logical$DCSE.MeJA[combo.logical$DCSE.MeJA != 0] <- 1
venn(combo.logical[ , 1:4], cexil = 1, cexsn = .85)
colSums(combo.logical[ , 1:4])
#unique to MeJA/DCSE combo
combo.logical %>% filter(DCSE.MeJA == 1, DCSE.Cont == 0, DHS.Cont == 0, DHS.MeJA == 0)
#unique to MeJA/DHS combo
combo.logical %>% filter(DCSE.MeJA == 0, DCSE.Cont == 0, DHS.Cont == 0, DHS.MeJA == 1)
write.xlsx(method_unique_compounds, "unique compounds DHS comparison.xlsx",
sheetName = "By Method", row.names = FALSE)
write.xlsx(treatment_unique_compounds, "unique compounds DHS comparison.xlsx",
sheetName = "By Treatment", row.names = FALSE, append = TRUE)
data.scaled <- scale(data[3:length(data)])
all.pca <- prcomp(data.scaled, scale. = FALSE, center = FALSE)
summary(all.pca)
#4 PCs to capture ~80% of variance
#screeplot(all.pca,type="l")
##my ggplot2 theme
multivar.theme <- theme_bw(base_size = 7, base_family = "Helvetica")+  #this changes the default text size and font
theme(axis.title = element_text(size = 7),                      #this sets a different font size for the axis labels
panel.border = element_rect(size = .5, color = "black"),   #change size= here to change border size
panel.grid.major = element_blank(),                     #these two lines make the grid lines go away
panel.grid.minor = element_blank(),
legend.text = element_text(size = 7),                  #legend font size
legend.background = element_rect(color = "black", size = 0.25),
legend.key.size = unit(.4, "lines"),
legend.spacing = unit(.4, "lines"))         #changes horizontal spacing
Method <- data$Method
Treatment <- data$Treatment
shape.labels = c("DCSE", "DHS")
col.labels = c("Control", "MeJA")
cols <- c("Cont" = "#1b9e77", "MeJA" = "#d95f02")
ggplot(as.data.frame(all.pca$x), aes(PC1, PC2)) +
geom_point(aes(fill = Treatment, shape = Method), size = I(2)) +
xlim(-18, 18) +
multivar.theme +
scale_shape_manual(name = "Method:",
values = c(21, 24),
labels = shape.labels) +
scale_fill_manual(name = "Treatment:",
values = cols,
labels = col.labels) +
guides(fill = guide_legend(override.aes = list(color = cols))) +
theme(legend.position = "bottom", legend.box = "horizontal") +
ylab(paste0("PC2 (",round(summary(all.pca)$importance[2,2]*100, 2), "%)")) +
xlab(paste0("PC1 (",round(summary(all.pca)$importance[2,1]*100, 2), "%)"))
ggsave("Comparison PCA.png", width = 3.33, height = 3.5, units = "in")
pca.correlations<-PC.cors(all.pca, as.data.frame(data.scaled), 2)
pca.correlations$PC1.r2 <- pca.correlations$PC1.corr.coefs^2
pca.correlations$PC2.r2 <- pca.correlations$PC2.corr.coefs^2
pca.correlations$PC1.p.corrected <- pca.correlations$PC1.p.values %>% p.adjust(method="fdr")
pca.correlations$PC2.p.corrected <- pca.correlations$PC2.p.values %>% p.adjust(method="fdr")
PC1.corr.sig <- pca.correlations %>% subset(PC1.p.corrected <= 0.05 & PC1.r2 >= 0.8,
select = c(.Variables, PC1.corr.coefs, PC1.r2,
PC1.p.corrected))
PC2.corr.sig <- pca.correlations %>% subset(PC2.p.corrected <= 0.05 & PC2.r2 >= 0.8,
select = c(.Variables, PC2.corr.coefs, PC2.r2,
PC2.p.corrected))
PC1.corr.sig[,-1] <- PC1.corr.sig[,-1] %>% signif(digits=3)
PC2.corr.sig[,-1] <- PC2.corr.sig[,-1] %>% signif(digits=3)
#get vapor pressures for these babies
left_join(PC1.corr.sig, library, by = c(".Variables" = "IA_Name")) %>% select(Compound = .Variables, PC1.corr.coefs, PC1.r2, PC1.p.corrected, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> PC1.corr.sig
PC1.corr.sig
arrange(PC1.corr.sig, PC1.corr.coefs)
left_join(PC2.corr.sig, library, by = c(".Variables" = "IA_Name")) %>% select(Compound = .Variables, PC2.corr.coefs, PC2.r2, PC2.p.corrected, Log_P, Vapor_Pressure, Vapor_Pressure_At) -> PC2.corr.sig
PC2.corr.sig
write.xlsx(PC1.corr.sig, "PCA compounds DHS comparison.xlsx",
sheetName = "PC1", col.names = TRUE, row.names = FALSE)
write.xlsx(PC2.corr.sig, "PCA compounds DHS comparison.xlsx",
sheetName = "PC2", col.names = TRUE, row.names = FALSE, append = TRUE)
